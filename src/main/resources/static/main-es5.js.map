{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/activation/activation.component.ts","webpack:///src/app/activation/activation.component.html","webpack:///src/app/admin-dashboard/patient-list/patient-details.component.ts","webpack:///src/app/admin-dashboard/patient-list/patient-details.component.html","webpack:///src/app/admin-dashboard/patient-list/patient-list.component.ts","webpack:///src/app/admin-dashboard/patient-list/patient-list.component.html","webpack:///src/app/admin-dashboard/patient-list/patient-update.component.ts","webpack:///src/app/admin-dashboard/patient-list/patient-update.component.html","webpack:///src/app/admin-dashboard/practitioner-list/general-practitioner-details.component.ts","webpack:///src/app/admin-dashboard/practitioner-list/general-practitioner-details.component.html","webpack:///src/app/admin-dashboard/practitioner-list/general-practitioner-list.component.ts","webpack:///src/app/admin-dashboard/practitioner-list/general-practitioner-list.component.html","webpack:///src/app/admin-dashboard/practitioner-list/general-practitioner-update.component.ts","webpack:///src/app/admin-dashboard/practitioner-list/general-practitioner-update.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/appointment/appointment.component.ts","webpack:///src/app/appointment/appointment.component.html","webpack:///src/app/appointment/event-utils.ts","webpack:///src/app/appointment/select-practitioner.component.ts","webpack:///src/app/appointment/select-practitioner.component.html","webpack:///src/app/appointment/update-practitioner.component.ts","webpack:///src/app/appointment/update-practitioner.component.html","webpack:///src/app/appointment/worktime/worktime.component.ts","webpack:///src/app/appointment/worktime/worktime.component.html","webpack:///src/app/auth/login.component.ts","webpack:///src/app/auth/login.component.html","webpack:///src/app/auth/registration.component.ts","webpack:///src/app/auth/registration.component.html","webpack:///src/app/client-list/client-list.component.ts","webpack:///src/app/client-list/client-list.component.html","webpack:///src/app/common-questions/common-questions.component.ts","webpack:///src/app/common-questions/common-questions.component.html","webpack:///src/app/dto/forgot-password-dto.ts","webpack:///src/app/dto/holidays-dto.ts","webpack:///src/app/dto/jwt-dto.ts","webpack:///src/app/dto/login-user.ts","webpack:///src/app/dto/new-user.ts","webpack:///src/app/dto/update-password-dto.ts","webpack:///src/app/forgot-password/forgot-password.component.ts","webpack:///src/app/forgot-password/forgot-password.component.html","webpack:///src/app/guard/login.guard.ts","webpack:///src/app/guard/user-guard.service.ts","webpack:///src/app/index/index.component.ts","webpack:///src/app/index/index.component.html","webpack:///src/app/interceptor/user-interceptor.service.ts","webpack:///src/app/main-nav/main-nav.component.ts","webpack:///src/app/main-nav/main-nav.component.html","webpack:///src/app/modal/modal.component.ts","webpack:///src/app/modal/modal.component.html","webpack:///src/app/model/appointment.ts","webpack:///src/app/model/user.ts","webpack:///src/app/model/worktime.ts","webpack:///src/app/profile/password-update.component.ts","webpack:///src/app/profile/password-update.component.html","webpack:///src/app/profile/profile-update.component.ts","webpack:///src/app/profile/profile-update.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/reset-password/reset-password.component.ts","webpack:///src/app/reset-password/reset-password.component.html","webpack:///src/app/service/admin-dashboard.service.ts","webpack:///src/app/service/appointment.service.ts","webpack:///src/app/service/auth.service.ts","webpack:///src/app/service/practitioner-dashboard.service.ts","webpack:///src/app/service/token.service.ts","webpack:///src/app/service/upload-file.service.ts","webpack:///src/app/service/user-profile.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ActivationComponent","activatedRoute","authService","router","toastr","activation","snapshot","url","path","subscribe","data","success","timeOut","positionClass","navigate","error","selector","templateUrl","styleUrls","PatientDetailsComponent","route","adminService","params","getPatientById","patient","err","errorMessage","message","list","PatientListComponent","matDialog","patients","page","getPatients","username","dialogRef","open","width","title","paragraph","afterClosed","result","deletePatient","getAllPatient","response","upgradeToPractitioner","name","ngOnInit","filter","res","toLocaleLowerCase","match","search","PatientUpdateComponent","minDate","Date","maxDate","email","address","dateOfBorn","phoneNumber","updatePatient","gotoList","onSubmit","GeneralPractitionerDetailsComponent","practitioner","GeneralPractitionerListComponent","practitioners","getPractitioners","getAllPractitioner","downgradeToPatient","window","location","reload","GeneralPractitionerUpdateComponent","updatePractitioner","routes","component","canActivate","expectedRole","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","registerPlugins","AppModule","provide","useClass","useValue","declarations","providers","bootstrap","entryComponents","AppointmentComponent","service","tokenService","userProfileService","getUserName","dayNumber","calendarEvents","customBusinessHours","myCalendarEventForInstruction","calendarVisible","calendarOptions","locale","allDaySlot","headerToolbar","left","center","right","forceEventDuration","slotLabelFormat","hour","minute","omitZeroMinute","meridiem","slotDuration","defaultTimedEventDuration","slotLabelInterval","slotMinTime","slotMaxTime","businessHours","selectConstraint","longPressDelay","validRange","start","now","end","events","initialView","firstDay","weekends","editable","selectable","selectMirror","dayMaxEvents","select","handleDateSelect","bind","eventClick","handleEventClick","eventsSet","handleEvents","currentEvents","day","getDay","getProfile","profileData","getProfileDetails","doesYourDoctorWorkOnHolidays","getWorksOnHolidays","defaultTimePerClient","wantToWorkOnHolidays","worksOnHoliday","getYourDoctorBusinessHours","myPractitionerWorkingTime","forEach","element","concat","daysOfWeek","startTime","fromTime","endTime","toTime","showMyReservations","getAppointments","time","showAppointmentsForInstruction","getOthersReservations","getOthersAppointments","backgroundColor","textColor","borderColor","color","className","selectInfo","calendarApi","view","calendar","unselect","getFullYear","getMonth","getHours","getMinutes","addEvent","startStr","saveAppointment","clickInfo","event","deleteAppointment","remove","encapsulation","None","eventGuid","dateNow","HOLIDAYS","toString","createEventId","String","SelectPractitionerComponent","UpdatePractitionerComponent","appointmentService","preFilePath","getAllPractitionerExceptMe","practitionerId","WorktimeComponent","mondayStart","tuesdayStart","wednesdayStart","thursdayStart","fridayStart","mondayEnd","tuesdayEnd","wednesdayEnd","thursdayEnd","fridayEnd","getBusinessHours","getHolidayWorksForWorktimeSettings","setBusinessHours","worktimes","setWorksOnHolidays","LoginComponent","loginUser","password","login","setToken","token","onLogin","RegistrationComponent","newUser","addUser","onRegister","ClientListComponent","clients","getClients","getAllClient","clientName","CommonQuestionsComponent","ForgotPasswordDto","HolidaysDto","JwtDto","LoginUser","NewUser","UpdatePasswordDto","ForgotPasswordComponent","forgotPassword","LoginGuard","next","state","isLogged","providedIn","ProdGuardService","realRole","IsAdmin","realRole2","IsPractitioner","indexOf","IndexComponent","UserInterceptorService","handle","intReq","getToken","addToken","pipe","status","dto","refresh","clone","headers","set","interceptorProvider","multi","MainNavComponent","breakpointObserver","isPatient","isPractitioner","isAdmin","isHandset$","observe","Handset","matches","IsPatient","logOut","ModalComponent","Appointment","User","isenabled","roles","Worktime","PasswordUpdateComponent","updatePassword","console","log","editProfile","ProfileUpdateComponent","uploadService","https","progress","percentage","changeImage","updateProfile","picture","workingAddress","specialization","deleteFileFromStorage","currentFileUpload","selectedFiles","item","pushFileToStorageMine","undefined","target","files","deletePicture","selectFile","uploadPicture","ProfileComponent","ResetPasswordComponent","resetPassword","AdminDashboardService","httpClient","dashboardURL","get","put","AppointmentService","appointmentURL","appointment","post","AuthService","authURL","PractitionerDashboardService","practitionerDashboardURL","practitionerUsername","TOKEN_KEY","TokenService","localStorage","removeItem","setItem","getItem","payload","split","payloadDecoded","atob","values","JSON","parse","sub","clear","UploadFileService","patientURL","file","FormData","append","newRequest","reportProgress","responseType","request","filename","UserProfileService","profile","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\nexport class ActivationComponent implements OnInit {\n\n\n    constructor(\n      private activatedRoute: ActivatedRoute,\n      private authService: AuthService,\n      private router: Router,\n      private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.activation();\n  }\n\n  activation() {\n    this.authService.activation(this.activatedRoute.snapshot.url[1].path).subscribe(\n      data => {\n        this.toastr.success('Sikeres aktiváció!', 'OK', {\n          timeOut: 3000, positionClass: 'toast-top-center'\n        });\n        this.router.navigate(['/login']);\n      },\n      error => {\n      }\n    );\n  }\n\n}\n","<app-main-nav></app-main-nav>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-patient-details',\r\n  templateUrl: './patient-details.component.html',\r\n  styleUrls: ['./patient-details.component.css']\r\n})\r\nexport class PatientDetailsComponent implements OnInit {\r\n\r\n  id: number;\r\n  patient: User;\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private adminService: AdminDashboardService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n     this.id = this.route.snapshot.params['id'];\r\n\r\n    this.adminService.getPatientById(this.id)\r\n      .subscribe(\r\n        data => {\r\n          this.patient = data;\r\n        },\r\n        err => {\r\n          this.errorMessage = err.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n\r\n  list(){\r\n    this.router.navigate(['patients']);\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <h2>Páciens részletek</h2>\r\n\r\n  <hr/>\r\n  <div *ngIf=\"patient\">\r\n    <div>\r\n      <label><b>Név: </b></label> {{patient.patient.name}}\r\n    </div>\r\n    <div>\r\n      <label><b>Felhasználónév: </b></label> {{patient.username}}\r\n    </div>\r\n    <div>\r\n      <label><b>Email: </b></label> {{patient.patient.email}}\r\n    </div>\r\n    <div>\r\n      <label><b>Lakcím: </b></label> {{patient.patient.address}}\r\n    </div>\r\n    <div>\r\n      <label><b>Születési dátum: </b></label> {{patient.patient.dateOfBorn}}\r\n    </div>\r\n    <div>\r\n      <label><b>Telefonszám: </b></label> {{patient.patient.phoneNumber}}\r\n    </div>\r\n  </div>\r\n\r\n  <br>\r\n  <br>\r\n  <button (click)=\"list()\" class=\"btn btn-primary\">Vissza a páciens listához</button><br>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ModalComponent } from 'src/app/modal/modal.component';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-list',\r\n  templateUrl: './patient-list.component.html',\r\n  styleUrls: ['./patient-list.component.css']\r\n})\r\nexport class PatientListComponent implements OnInit {\r\n\r\n  patients: Array<User> = [];\r\n  errorMessage: string;\r\n  name: any;\r\n  totalRecords: number;\r\n  page:number = 1;\r\n\r\n  constructor(private adminService: AdminDashboardService, private router: Router,\r\n              private toastr: ToastrService, public matDialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.getPatients();\r\n  }\r\n\r\n  deletePatient(id: number, username: string) {\r\n\r\n    const dialogRef = this.matDialog.open(ModalComponent, {\r\n      width: '300px',\r\n      data:{\r\n        title: \"Biztosan törlöd őt?\",\r\n        paragraph: username\r\n    }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result == true){\r\n        this.adminService.deletePatient(id)\r\n          .subscribe(\r\n            data => {\r\n              this.toastr.success('Páciens törölve!', 'OK', {\r\n                timeOut: 3000,  positionClass: 'toast-top-center',\r\n              });\r\n              this.getPatients();\r\n            },\r\n            err => {\r\n              this.errorMessage = err.error.message;\r\n              this.toastr.error(this.errorMessage, 'Hiba!', {\r\n                timeOut: 3000,  positionClass: 'toast-top-center',\r\n              });\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  getPatients() {\r\n    this.adminService.getAllPatient().subscribe(\r\n      response => {\r\n        this.patients = response;\r\n      },\r\n      error => {\r\n        // TODO: Error message\r\n      }\r\n    );\r\n  }\r\n\r\n  getPatientDetails(id: number){\r\n    this.router.navigate(['patients/details', id]);\r\n  }\r\n\r\n  updatePatient(id: number){\r\n    this.router.navigate(['patients/update', id]);\r\n  }\r\n\r\n  updateToPractitioner(id: number, username: string){\r\n\r\n    const dialogRef = this.matDialog.open(ModalComponent, {\r\n      width: '300px',\r\n      data:{\r\n        title: \"Biztosan szeretnéd, hogy ő orvos legyen?\",\r\n        paragraph: username\r\n    }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result == true){\r\n\r\n        this.adminService.upgradeToPractitioner(id).subscribe(\r\n          response => {\r\n            this.toastr.success(\"Orvos rang kiosztva\", 'OK', {\r\n              timeOut: 3000, positionClass: 'toast-top-center'\r\n            });\r\n          },\r\n          error => {\r\n            this.toastr.error(error.error.message, 'Hiba', {\r\n              timeOut: 3000, positionClass: 'toast-top-center'\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  search(){\r\n    if(this.name == \"\"){\r\n      this.ngOnInit();\r\n    } else{\r\n      this.patients = this.patients.filter(res=>{\r\n        return res.patient.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\r\n      })\r\n    }\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <div class=\"panel panel-primary\">\r\n    <div class=\"panel-heading\">\r\n      <h2>Páciens lista</h2>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n      <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"name\" (ngModelChange)=\"search()\" placeholder=\"Írd be a páciens nevét\">\r\n      <table class=\"table table-striped table-responsive-md\">\r\n        <thead>\r\n          <tr>\r\n            <th>Név</th>\r\n            <th>Felhasználónév</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let patient of patients | paginate: { id: 'listing_pagination',\r\n          itemsPerPage: 10,\r\n          currentPage: page,\r\n          totalItems: totalRecords }\">\r\n            <td>{{patient.patient.name}}</td>\r\n            <td>{{patient.username}}</td>\r\n            <td>{{patient.patient.email}}</td>\r\n            <td style=\"display: flex;\"><button (click)=\"getPatientDetails(patient.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Részletek</button>\r\n            <button (click)=\"updatePatient(patient.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Módosítás</button>\r\n            <button (click)=\"updateToPractitioner(patient.id, patient.username)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Orvossá alakítás</button>\r\n            <button (click)=\"deletePatient(patient.id, patient.username)\" class=\"btn btn-danger\">Törlés</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <pagination-controls  id=\"listing_pagination\" maxSize=\"5\"\r\n        directionLinks=\"true\"\r\n        (pageChange)=\"page = $event\"></pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-update',\r\n  templateUrl: './patient-update.component.html',\r\n  styleUrls: ['./patient-update.component.css']\r\n})\r\nexport class PatientUpdateComponent implements OnInit {\r\n\r\n  id: number;\r\n  patient: User;\r\n\r\n  name : string;\r\n  username : string;\r\n  email : string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n\r\n  minDate = new Date(1900,1,1);\r\n  maxDate = new Date();\r\n\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private adminService: AdminDashboardService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    this.adminService.getPatientById(this.id)\r\n      .subscribe(\r\n        data => {\r\n          this.patient = data;\r\n          this.name = this.patient.patient.name;\r\n          this.username = this.patient.username;\r\n          this.email = this.patient.patient.email;\r\n          this.address = this.patient.patient.address;\r\n          this.dateOfBorn = this.patient.patient.dateOfBorn;\r\n          this.phoneNumber = this.patient.patient.phoneNumber;\r\n      }, error => {\r\n\r\n      });\r\n  }\r\n\r\n  updatePatient() {\r\n    this.patient.patient.name = this.name;\r\n    this.patient.username = this.username;\r\n    this.patient.patient.email = this.email;\r\n    this.patient.patient.address = this.address;\r\n    this.patient.patient.dateOfBorn = this.dateOfBorn;\r\n    this.patient.patient.phoneNumber = this.phoneNumber;\r\n\r\n    this.adminService.updatePatient(this.id, this.patient)\r\n      .subscribe(data => {\r\n        this.toastr.success('Sikeres módosítás!', 'OK', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        this.gotoList();\r\n      }, err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.updatePatient();\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/patients']);\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n  <div class=\"container d-flex justify-content-center\">\r\n\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <h4><b>Páciens módosítása</b></h4>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Teljes név</mat-label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              matInput\r\n              maxlength=\"40\"\r\n              #nameError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"nameError.invalid && nameError.touched\"\r\n            >\r\n              <div *ngIf=\"nameError.errors.required\">\r\n                Név megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"nameError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Név megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              [(ngModel)]=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              matInput\r\n              #emailError=\"ngModel\"\r\n              maxlength=\"40\"\r\n              pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"emailError.invalid && emailError.touched\"\r\n            >\r\n              <div *ngIf=\"emailError.errors.required\">\r\n                Email megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.pattern\">\r\n                Meg kell felelnie a mintának.\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Email cím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <label for=\"dateOfBorn\">Születési dátum:</label>\r\n            <input\r\n              name=\"dateOfBorn\"\r\n              id=\"dateOfBorn\"\r\n              matInput\r\n              [matDatepicker]=\"myDatePicker\"\r\n              [(ngModel)]=\"dateOfBorn\"\r\n              [min]=\"minDate\"\r\n              [max]=\"maxDate\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              [for]=\"myDatePicker\"\r\n              matSuffix\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatePicker></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Lakcím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"address\"\r\n              name=\"address\"\r\n              id=\"address\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              #addressError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"addressError.invalid && addressError.touched\"\r\n            >\r\n              <div *ngIf=\"addressError.errors.required\">\r\n                Lakcím megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"addressError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Lakcím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Telefonszám</mat-label>\r\n            <input\r\n              [(ngModel)]=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              matInput\r\n              maxlength=\"20\"\r\n              #phoneNumberError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"phoneNumberError.invalid && phoneNumberError.touched\"\r\n            >\r\n              <div *ngIf=\"phoneNumberError.errors.required\">\r\n                Telefonszám megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"phoneNumberError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Telefonszám megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n              <i class=\"far fa-save\"></i> Módosítás\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-general-practitioner-details',\r\n  templateUrl: './general-practitioner-details.component.html',\r\n  styleUrls: ['./general-practitioner-details.component.css']\r\n})\r\nexport class GeneralPractitionerDetailsComponent implements OnInit {\r\n\r\n  id: number;\r\n  practitioner: User;\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private adminService: AdminDashboardService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    this.adminService.getPatientById(this.id)\r\n      .subscribe(\r\n        data => {\r\n          this.practitioner = data;\r\n        },\r\n        err => {\r\n          this.errorMessage = err.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n\r\n  list(){\r\n    this.router.navigate(['practitioners']);\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <h2>Háziorvos részletek</h2>\r\n\r\n  <hr/>\r\n  <div *ngIf=\"practitioner\">\r\n    <div>\r\n      <label><b>Név: </b></label> {{practitioner.patient.name}}\r\n    </div>\r\n    <div>\r\n      <label><b>Felhasználónév: </b></label> {{practitioner.username}}\r\n    </div>\r\n    <div>\r\n      <label><b>Email: </b></label> {{practitioner.patient.email}}\r\n    </div>\r\n    <div>\r\n      <label><b>Lakcím: </b></label> {{practitioner.patient.address}}\r\n    </div>\r\n    <div>\r\n      <label><b>Születési dátum: </b></label> {{practitioner.patient.dateOfBorn}}\r\n    </div>\r\n    <div>\r\n      <label><b>Telefonszám: </b></label> {{practitioner.patient.phoneNumber}}\r\n    </div>\r\n  </div>\r\n\r\n  <br>\r\n  <br>\r\n  <button (click)=\"list()\" class=\"btn btn-primary\">Vissza a háziorvos listához</button><br>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ModalComponent } from 'src/app/modal/modal.component';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-general-practitioner-list',\r\n  templateUrl: './general-practitioner-list.component.html',\r\n  styleUrls: ['./general-practitioner-list.component.css']\r\n})\r\nexport class GeneralPractitionerListComponent implements OnInit {\r\n\r\n  practitioners: Array<User> = [];\r\n  errorMessage: string;\r\n  name: any;\r\n  totalRecords: number;\r\n  page:number = 1;\r\n\r\n  constructor(private adminService: AdminDashboardService, private router: Router,\r\n              private toastr: ToastrService, public matDialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.getPractitioners();\r\n  }\r\n\r\n  getPractitioners() {\r\n    this.adminService.getAllPractitioner().subscribe(\r\n      response => {\r\n        this.practitioners = response;\r\n      },\r\n      error => {\r\n      }\r\n    );\r\n  }\r\n\r\n  downgradeToPatient(id: number, username: string){\r\n\r\n    const dialogRef = this.matDialog.open(ModalComponent, {\r\n      width: '300px',\r\n      data:{\r\n        title: \"Ő biztosan nem orvos?\",\r\n        paragraph: username\r\n    }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result == true){\r\n\r\n        this.adminService.downgradeToPatient(id).subscribe(\r\n          data => {\r\n            this.toastr.success('Ez a felhasználó mostantól nem orvos!', 'OK', {\r\n              timeOut: 3000,  positionClass: 'toast-top-center',\r\n            });\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            this.errorMessage = error.error.message;\r\n              this.toastr.error(this.errorMessage, 'Hiba!', {\r\n                timeOut: 3000,  positionClass: 'toast-top-center',\r\n              });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getPractitionerDetails(id: number){\r\n    this.router.navigate(['practitioners/details', id]);\r\n  }\r\n\r\n  updatePractitioner(id: number){\r\n    this.router.navigate(['practitioners/update', id]);\r\n  }\r\n\r\n  search(){\r\n    if(this.name == \"\"){\r\n      this.ngOnInit();\r\n    } else{\r\n      this.practitioners = this.practitioners.filter(res=>{\r\n        return res.patient.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <div class=\"panel panel-primary\">\r\n    <div class=\"panel-heading\">\r\n      <h2>Praktícionáló lista</h2>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n      <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"name\" (ngModelChange)=\"search()\" placeholder=\"Írd be az orvos nevét\">\r\n      <table class=\"table table-striped table-responsive-md\">\r\n        <thead>\r\n          <tr>\r\n            <th>Név</th>\r\n            <th>Felhasználónév</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let practitioner of practitioners | paginate: { id: 'listing_pagination',\r\n          itemsPerPage: 10,\r\n          currentPage: page,\r\n          totalItems: totalRecords }\">\r\n            <td>{{practitioner.patient.name}}</td>\r\n            <td>{{practitioner.username}}</td>\r\n            <td>{{practitioner.patient.email}}</td>\r\n            <td style=\"display: flex;\"><button (click)=\"getPractitionerDetails(practitioner.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Részletek</button>\r\n            <button (click)=\"updatePractitioner(practitioner.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Módosítás</button>\r\n            <button (click)=\"downgradeToPatient(practitioner.id, practitioner.username)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Nem orvos</button>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <pagination-controls  id=\"listing_pagination\" maxSize=\"5\"\r\n        directionLinks=\"true\"\r\n        (pageChange)=\"page = $event\"></pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-general-practitioner-update',\r\n  templateUrl: './general-practitioner-update.component.html',\r\n  styleUrls: ['./general-practitioner-update.component.css']\r\n})\r\nexport class GeneralPractitionerUpdateComponent implements OnInit {\r\n\r\n  id: number;\r\n  practitioner: User;\r\n\r\n  name : string;\r\n  username : string;\r\n  email : string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n\r\n  minDate = new Date(1900,1,1);\r\n  maxDate = new Date();\r\n\r\n\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private adminService: AdminDashboardService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    this.adminService.getPatientById(this.id)\r\n      .subscribe(data => {\r\n        this.practitioner = data;\r\n        this.name = this.practitioner.patient.name;\r\n        this.username = this.practitioner.username;\r\n        this.email = this.practitioner.patient.email;\r\n        this.address = this.practitioner.patient.address;\r\n        this.dateOfBorn = this.practitioner.patient.dateOfBorn;\r\n        this.phoneNumber = this.practitioner.patient.phoneNumber;\r\n      }, error => {\r\n\r\n      });\r\n  }\r\n\r\n  updatePractitioner() {\r\n    this.practitioner.patient.name = this.name;\r\n    this.practitioner.username = this.username;\r\n    this.practitioner.patient.email = this.email;\r\n    this.practitioner.patient.address = this.address;\r\n    this.practitioner.patient.dateOfBorn = this.dateOfBorn;\r\n    this.practitioner.patient.phoneNumber = this.phoneNumber;\r\n\r\n    this.adminService.updatePatient(this.id, this.practitioner)\r\n      .subscribe(data => {\r\n        this.toastr.success('Sikeres módosítás!', 'OK', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        this.gotoList();\r\n      }, err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.updatePractitioner();\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/practitioners']);\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n  <div class=\"container d-flex justify-content-center\">\r\n\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <h4><b>Praktícionáló módosítása</b></h4>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Teljes név</mat-label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              matInput\r\n              maxlength=\"40\"\r\n              #nameError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"nameError.invalid && nameError.touched\"\r\n            >\r\n              <div *ngIf=\"nameError.errors.required\">\r\n                Név megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"nameError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Név megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              [(ngModel)]=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              matInput\r\n              #emailError=\"ngModel\"\r\n              maxlength=\"40\"\r\n              pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"emailError.invalid && emailError.touched\"\r\n            >\r\n              <div *ngIf=\"emailError.errors.required\">\r\n                Email megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.pattern\">\r\n                Meg kell felelnie a mintának.\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Email cím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <label for=\"dateOfBorn\">Születési dátum:</label>\r\n            <input\r\n              name=\"dateOfBorn\"\r\n              id=\"dateOfBorn\"\r\n              matInput\r\n              [matDatepicker]=\"myDatePicker\"\r\n              [(ngModel)]=\"dateOfBorn\"\r\n              [min]=\"minDate\"\r\n              [max]=\"maxDate\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              [for]=\"myDatePicker\"\r\n              matSuffix\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatePicker></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Lakcím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"address\"\r\n              name=\"address\"\r\n              id=\"address\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              #addressError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"addressError.invalid && addressError.touched\"\r\n            >\r\n              <div *ngIf=\"addressError.errors.required\">\r\n                Lakcím megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"addressError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Lakcím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Telefonszám</mat-label>\r\n            <input\r\n              [(ngModel)]=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              matInput\r\n              maxlength=\"20\"\r\n              #phoneNumberError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"phoneNumberError.invalid && phoneNumberError.touched\"\r\n            >\r\n              <div *ngIf=\"phoneNumberError.errors.required\">\r\n                Telefonszám megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"phoneNumberError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Telefonszám megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n              <i class=\"far fa-save\"></i> Módosítás\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { RegistrationComponent } from './auth/registration.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { ProdGuardService } from './guard/user-guard.service';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileUpdateComponent } from './profile/profile-update.component';\r\nimport { PasswordUpdateComponent } from './profile/password-update.component';\r\nimport { SelectPractitionerComponent } from './appointment/select-practitioner.component';\r\nimport { LoginGuard } from './guard/login.guard';\r\nimport { WorktimeComponent } from './appointment/worktime/worktime.component';\r\nimport { PatientDetailsComponent } from './admin-dashboard/patient-list/patient-details.component';\r\nimport { PatientListComponent } from './admin-dashboard/patient-list/patient-list.component';\r\nimport { PatientUpdateComponent } from './admin-dashboard/patient-list/patient-update.component';\r\nimport { GeneralPractitionerDetailsComponent } from './admin-dashboard/practitioner-list/general-practitioner-details.component';\r\nimport { GeneralPractitionerListComponent } from './admin-dashboard/practitioner-list/general-practitioner-list.component';\r\nimport { GeneralPractitionerUpdateComponent } from './admin-dashboard/practitioner-list/general-practitioner-update.component';\r\nimport { AppointmentComponent } from './appointment/appointment.component';\r\nimport { UpdatePractitionerComponent } from './appointment/update-practitioner.component';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ActivationComponent } from './activation/activation.component';\r\nimport { CommonQuestionsComponent } from './common-questions/common-questions.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: IndexComponent},\r\n  {path: 'login', component: LoginComponent, canActivate: [LoginGuard]},\r\n  {path: 'registration', component: RegistrationComponent, canActivate: [LoginGuard]},\r\n  {path: 'activation/:code', component: ActivationComponent, canActivate: [LoginGuard]},\r\n  {path: 'forgot-password', component: ForgotPasswordComponent, canActivate: [LoginGuard]},\r\n  {path: 'reset-password/:code', component: ResetPasswordComponent, canActivate: [LoginGuard]},\r\n  {path: 'profile', component: ProfileComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'profile/update', component: ProfileUpdateComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'profile/password-update', component: PasswordUpdateComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'appointment/reservation', component: SelectPractitionerComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'practitioners', component: GeneralPractitionerListComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'practitioner-dashboard', component: ClientListComponent, canActivate: [ProdGuardService], data: {expectedRole: ['practitioner']}},\r\n  {path: 'practitioners/details/:id', component: GeneralPractitionerDetailsComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'practitioners/update/:id', component: GeneralPractitionerUpdateComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'patients', component: PatientListComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'patients/details/:id', component: PatientDetailsComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'patients/update/:id', component: PatientUpdateComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'appointment/reservation', component: AppointmentComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'appointment/update-practitioner', component: UpdatePractitionerComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'appointment/worktimes', component: WorktimeComponent, canActivate: [ProdGuardService], data: {expectedRole: ['practitioner']}},\r\n  {path: 'frequently-asked-questions', component: CommonQuestionsComponent},\r\n  {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'szakdolgozat-frontend';\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { RegistrationComponent } from './auth/registration.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { MainNavComponent } from './main-nav/main-nav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { PatientDetailsComponent } from './admin-dashboard/patient-list/patient-details.component';\r\nimport { PatientListComponent } from './admin-dashboard/patient-list/patient-list.component';\r\nimport { PatientUpdateComponent } from './admin-dashboard/patient-list/patient-update.component';\r\nimport { GeneralPractitionerDetailsComponent } from './admin-dashboard/practitioner-list/general-practitioner-details.component';\r\nimport { GeneralPractitionerListComponent } from './admin-dashboard/practitioner-list/general-practitioner-list.component';\r\nimport { GeneralPractitionerUpdateComponent } from './admin-dashboard/practitioner-list/general-practitioner-update.component';\r\nimport { AppointmentComponent } from './appointment/appointment.component';\r\nimport { SelectPractitionerComponent } from './appointment/select-practitioner.component';\r\nimport { UpdatePractitionerComponent } from './appointment/update-practitioner.component';\r\nimport { WorktimeComponent } from './appointment/worktime/worktime.component';\r\nimport { interceptorProvider } from './interceptor/user-interceptor.service';\r\nimport { PasswordUpdateComponent } from './profile/password-update.component';\r\nimport { ProfileUpdateComponent } from './profile/profile-update.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ActivationComponent } from './activation/activation.component';\r\nimport { CommonQuestionsComponent } from './common-questions/common-questions.component';\r\nimport { ModalComponent } from './modal/modal.component';\r\n\r\nFullCalendarModule.registerPlugins([\r\n  dayGridPlugin,\r\n  timeGridPlugin,\r\n  interactionPlugin\r\n])\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    IndexComponent,\r\n    MainNavComponent,\r\n    ProfileComponent,\r\n    GeneralPractitionerListComponent,\r\n    GeneralPractitionerDetailsComponent,\r\n    GeneralPractitionerUpdateComponent,\r\n    ProfileUpdateComponent,\r\n    PasswordUpdateComponent,\r\n    SelectPractitionerComponent,\r\n    PatientListComponent,\r\n    PatientDetailsComponent,\r\n    PatientUpdateComponent,\r\n    AppointmentComponent,\r\n    UpdatePractitionerComponent,\r\n    WorktimeComponent,\r\n    ClientListComponent,\r\n    ForgotPasswordComponent,\r\n    ResetPasswordComponent,\r\n    ActivationComponent,\r\n    CommonQuestionsComponent,\r\n    ModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ToastrModule.forRoot(),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatDialogModule,\r\n    LayoutModule,\r\n    MatSidenavModule,\r\n    MatTableModule,\r\n    NgxPaginationModule,\r\n    FullCalendarModule,\r\n    MatExpansionModule\r\n  ],\r\n  providers: [\r\n    interceptorProvider,\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n    {provide: MAT_DATE_LOCALE, useValue: 'hu'}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CalendarOptions, DateSelectArg, EventClickArg, EventApi } from '@fullcalendar/angular';\r\nimport { EventInput } from '@fullcalendar/core'\r\nimport huLocale from '@fullcalendar/core/locales/hu';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { InstructionDto } from '../dto/instruction-dto';\r\nimport { ModalComponent } from '../modal/modal.component';\r\nimport { Appointment } from '../model/appointment';\r\nimport { User } from '../model/user';\r\nimport { AppointmentService } from '../service/appointment.service';\r\nimport { UserProfileService } from '../service/user-profile.service';\r\nimport { TokenService } from '../service/token.service';\r\nimport { createEventId, HOLIDAYS } from './event-utils';\r\n\r\n@Component({\r\n  selector: 'app-appointment',\r\n  templateUrl: './appointment.component.html',\r\n  styleUrls: ['./appointment.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppointmentComponent {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n  errorMessage: string;\r\n  dayNumber: number = null;\r\n  calendarEvents: EventInput[] = [];\r\n  customBusinessHours: EventInput[] = [];\r\n  myCalendarEventForInstruction?: InstructionDto[] = [];\r\n  wantToWorkOnHolidays: boolean;\r\n\r\n  constructor(private service : AppointmentService, private toastr: ToastrService,\r\n    private tokenService: TokenService, private userProfileService: UserProfileService,\r\n    public matDialog: MatDialog){ }\r\n\r\n  ngOnInit(){\r\n    var day = new Date();\r\n    this.dayNumber = day.getDay();\r\n    this.calendarOptions.firstDay = this.dayNumber;\r\n    this.getProfile();\r\n  }\r\n\r\n  calendarVisible = true;\r\n  calendarOptions: CalendarOptions = {\r\n    locale: huLocale,\r\n    allDaySlot: false,\r\n    headerToolbar: {\r\n      left: 'prev,next',\r\n      center: 'title',\r\n      right: 'today'\r\n    },\r\n    forceEventDuration: true,\r\n    slotLabelFormat: {\r\n      hour: 'numeric',\r\n      minute: '2-digit',\r\n      omitZeroMinute: false,\r\n      meridiem: 'short'\r\n    },\r\n\r\n    slotDuration:'00:30',\r\n    defaultTimedEventDuration:'00:30',\r\n    slotLabelInterval: 30,\r\n    slotMinTime: '2:00',\r\n    slotMaxTime: '20:00',\r\n\r\n    businessHours: [],\r\n    selectConstraint:[],\r\n\r\n    longPressDelay: 0,\r\n\r\n    validRange: {\r\n      start: Date.now(),\r\n      end: Date.now() + 1000*60*60*24*31\r\n    },\r\n    events: this.calendarEvents,\r\n    initialView: 'timeGridWeek',\r\n    firstDay: this.dayNumber,\r\n    weekends: false,\r\n    editable: false,\r\n    selectable: true,\r\n    selectMirror: false,\r\n    dayMaxEvents: true,\r\n    select: this.handleDateSelect.bind(this),\r\n    eventClick: this.handleEventClick.bind(this),\r\n    eventsSet: this.handleEvents.bind(this),\r\n\r\n    /* you can update a remote database when these fire:\r\n    eventAdd:\r\n    eventChange:\r\n    eventRemove:\r\n    */\r\n  };\r\n\r\n  currentEvents: EventApi[] = [];\r\n\r\n  getProfile(){\r\n\r\n    this.profileData = new User();\r\n\r\n    this.userProfileService.getProfileDetails(this.username)\r\n      .subscribe(\r\n        data => {\r\n          this.profileData = data;\r\n          this.doesYourDoctorWorkOnHolidays();\r\n        },\r\n        err => {\r\n          this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n  }\r\n\r\n  doesYourDoctorWorkOnHolidays(){\r\n    this.service.getWorksOnHolidays(this.username).subscribe(\r\n      data => {\r\n        this.calendarOptions.slotDuration = '00:' + data.defaultTimePerClient,\r\n        this.calendarOptions.slotLabelInterval = data.defaultTimePerClient,\r\n        this.calendarOptions.defaultTimedEventDuration = '00:' + data.defaultTimePerClient;\r\n        this.calendarOptions.slotMinTime = data.slotMinTime,\r\n        this.calendarOptions.slotMaxTime = data.slotMaxTime,\r\n        this.wantToWorkOnHolidays = data.worksOnHoliday;\r\n        this.getYourDoctorBusinessHours();\r\n      },\r\n      error => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getYourDoctorBusinessHours(){\r\n    this.service.myPractitionerWorkingTime(this.username).subscribe(\r\n      data => {\r\n        data.forEach(element => {\r\n          this.customBusinessHours = this.customBusinessHours.concat({\r\n            daysOfWeek: [element.day],\r\n            startTime: element.fromTime,\r\n            endTime: element.toTime,\r\n            },)\r\n        })\r\n        this.calendarOptions.businessHours = this.customBusinessHours;\r\n        this.calendarOptions.selectConstraint = this.customBusinessHours;\r\n        this.showMyReservations();\r\n      })\r\n  }\r\n\r\n  showMyReservations(){\r\n    this.service.getAppointments(this.username).subscribe(\r\n      data => {\r\n        data.forEach(element => {\r\n          this.calendarEvents = this.calendarEvents.concat({\r\n              id: ''+element.id,\r\n              title: element.message,\r\n              start:element.time\r\n            },)\r\n            this.showAppointmentsForInstruction();\r\n        })\r\n        this.calendarOptions.events = this.calendarEvents;\r\n        this.getOthersReservations();\r\n      })\r\n  }\r\n\r\n  showAppointmentsForInstruction(){\r\n    this.service.showAppointmentsForInstruction(this.username).subscribe(\r\n      data => {\r\n        this.myCalendarEventForInstruction = data;\r\n      },\r\n      error => {\r\n      }\r\n    );\r\n  }\r\n\r\n  getOthersReservations(){\r\n    this.service.getOthersAppointments(this.username).subscribe(\r\n       data => {\r\n\r\n         data.forEach(element => {\r\n\r\n           this.calendarEvents = this.calendarEvents.concat({\r\n               id: ''+element.id,\r\n               start: element.time,\r\n               backgroundColor: '#dddddd',\r\n               textColor: '#000000',\r\n               borderColor: '#dddddd',\r\n               color: '#dddddd',\r\n               className: 'disabled'\r\n             },);\r\n         })\r\n\r\n\r\n        if(this.wantToWorkOnHolidays == true)\r\n         HOLIDAYS.forEach(element => {\r\n          this.calendarEvents = this.calendarEvents.concat({\r\n            id: createEventId()+1111,\r\n            start: element.start,\r\n            end: element.end,\r\n            backgroundColor: '#dddddd',\r\n            textColor: '#000000',\r\n            borderColor: '#dddddd',\r\n            color: '#dddddd',\r\n            className: 'disabled'\r\n          })\r\n        })\r\n        this.calendarOptions.events = this.calendarEvents;\r\n\r\n       })\r\n     }\r\n\r\n  handleDateSelect(selectInfo: DateSelectArg) {\r\n    const calendarApi = selectInfo.view.calendar;\r\n    calendarApi.unselect();\r\n\r\n    const dialogRef = this.matDialog.open(ModalComponent, {\r\n      width: '500px',\r\n      data:{\r\n        title: \"Biztosan foglalsz?\",\r\n        paragraph: selectInfo.start.getFullYear()+'.'+\r\n                  selectInfo.start.getMonth()+'.'+\r\n                  selectInfo.start.getDay()+'. '+\r\n                  selectInfo.start.getHours()+':'+\r\n                  selectInfo.start.getMinutes(),\r\n    }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result == true){\r\n\r\n        const dialogRef = this.matDialog.open(ModalComponent, {\r\n          width: '500px',\r\n          data:{\r\n            title: \"Ha szeretnéd, írd le a problémádat pár szóban\",\r\n        }\r\n        });\r\n\r\n      //const title = prompt('Ha szeretnéd, írd le a problémádat pár szóban');\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if(result!=true){\r\n            calendarApi.addEvent({\r\n            id: createEventId()+'f',\r\n            title: result,\r\n            start: selectInfo.startStr\r\n          });\r\n        }\r\n        else {\r\n          calendarApi.addEvent({\r\n            id: createEventId()+'f',\r\n            title: this.profileData.patient.name,\r\n            start: selectInfo.startStr\r\n          });\r\n        }\r\n\r\n        this.service.saveAppointment(this.username, new Appointment(null,result!=true?result:this.profileData.patient.name,selectInfo.startStr)).subscribe(\r\n          data => {\r\n            this.toastr.success('Sikeres időpontfoglalás!', 'OK', {\r\n              timeOut: 3000,  positionClass: 'toast-top-center',\r\n            });\r\n            window.location.reload();\r\n          },\r\n          err => {\r\n            this.errorMessage = err.error.message;\r\n            this.toastr.error(this.errorMessage, 'Hiba!', {\r\n              timeOut: 3000,  positionClass: 'toast-top-center',\r\n            });\r\n            window.location.reload();\r\n          }\r\n        );\r\n      });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleEventClick(clickInfo: EventClickArg) {\r\n    if(clickInfo.event.backgroundColor != '#dddddd'){\r\n\r\n      const dialogRef = this.matDialog.open(ModalComponent, {\r\n        width: '250px',\r\n        data:{title: \"Biztosan törlöd?\",\r\n        paragraph: clickInfo.event.start.getFullYear()+'.'+\r\n                   clickInfo.event.start.getMonth()+'.'+\r\n                   clickInfo.event.start.getDay()+'. '+\r\n                   clickInfo.event.start.getHours()+':'+\r\n                   clickInfo.event.start.getMinutes()\r\n      }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if(result == true){\r\n          this.service.deleteAppointment(clickInfo.event.id).subscribe(\r\n            data => {\r\n              this.toastr.success('Sikeresen törölted az időpontot!', 'OK', {\r\n                timeOut: 3000,  positionClass: 'toast-top-center',\r\n              });\r\n            },\r\n            err => {\r\n              this.toastr.error('Az időpont törlése nem sikerült!', 'Hiba!', {\r\n                timeOut: 3000,  positionClass: 'toast-top-center',\r\n              });\r\n            }\r\n          );\r\n          clickInfo.event.remove();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEvents(events: EventApi[]) {\r\n    this.currentEvents = events;\r\n  }\r\n\r\n}\r\n","<app-main-nav id=\"header\"></app-main-nav>\r\n<div class=\"container\">\r\n<div class='demo-app'>\r\n  <div class='demo-app-sidebar'>\r\n    <div class='demo-app-sidebar-section'>\r\n      <h2>Instrukciók\r\n      </h2>\r\n      <ul>\r\n        <li>Az általad kiválasztott praktícionáló időpontjait láthatod<br>\r\n        <br><i>-A fehér színnel jelzett időpontok elérhetők</i>\r\n        <br><i>-A szürke színnel jelzett időpontok foglaltak</i>\r\n        <br><i>-A sárga színnel jelzett oszlop a mai napot jelzi</i>\r\n        </li>\r\n        <li>Válassz ki egy olyan időpontot, amikor menni szeretnél</li>\r\n        <li>Kattints egy foglalásra a foglalás törléséhez</li>\r\n      </ul>\r\n    </div>\r\n    <div class='demo-app-sidebar-section'>\r\n      <h2>Lefoglalt időpontok:</h2>\r\n      <ul>\r\n        <li *ngFor='let event of myCalendarEventForInstruction'>\r\n          <i>{{event.practitionerName}}</i>\r\n          <br>\r\n          <b>{{event.time | date: 'yyyy.MM.dd hh:mm'}}</b>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div class='demo-app-main'>\r\n    <full-calendar\r\n      *ngIf='calendarVisible'\r\n      [options]='calendarOptions'\r\n    ></full-calendar>\r\n  </div>\r\n\r\n</div>\r\n</div>\r\n","import { EventInput } from '@fullcalendar/angular';\r\n\r\nlet eventGuid = 0;\r\nvar dateNow = new Date;\r\n\r\nexport const HOLIDAYS: EventInput[] = [\r\n  {\r\n    start: dateNow.getFullYear().toString()+'01-01T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'01-01T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'03-15T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'03-15T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'05-01T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'05-01T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'08-20T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'08-20T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'10-23T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'10-23T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'11-01T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'11-01T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'12-24T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'12-24T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'12-25T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'12-25T24:00:00',\r\n  },\r\n];\r\n\r\nexport function createEventId() {\r\n  return String(eventGuid++);\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../model/user';\r\nimport { UserProfileService } from '../service/user-profile.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-select-practitioner',\r\n  templateUrl: './select-practitioner.component.html',\r\n  styleUrls: ['./select-practitioner.component.css']\r\n})\r\nexport class SelectPractitionerComponent implements OnInit {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n\r\n  practitioners: Array<User> = [];\r\n  errorMessage: string;\r\n\r\n  constructor(private userProfileService: UserProfileService, private tokenService: TokenService,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile(){\r\n    this.profileData = new User();\r\n\r\n    this.userProfileService.getProfileDetails(this.username)\r\n      .subscribe(\r\n        data => {\r\n          this.profileData = data;\r\n        },\r\n        err => {\r\n          this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n  }\r\n}\r\n","<div *ngIf=\"!profileData.patient?.practitionerId; else schedule\">\r\n  <app-update-practitioner></app-update-practitioner>\r\n</div>\r\n\r\n<ng-template #schedule>\r\n  <app-appointment></app-appointment>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../model/user';\r\nimport { AppointmentService } from '../service/appointment.service';\r\nimport { UserProfileService } from '../service/user-profile.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-update-practitioner',\r\n  templateUrl: './update-practitioner.component.html',\r\n  styleUrls: ['./update-practitioner.component.css']\r\n})\r\nexport class UpdatePractitionerComponent implements OnInit {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n  practitioners: Array<User> = [];\r\n  errorMessage: string;\r\n  preFilePath = 'https://s3.us-east-2.amazonaws.com/onlinehealthcaresystem/';\r\n\r\n  constructor(private appointmentService: AppointmentService, private toastr: ToastrService,\r\n                  private tokenService: TokenService, private userProfileService: UserProfileService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n    this.getPractitioners();\r\n  }\r\n\r\n  getProfile(){\r\n    this.profileData = new User();\r\n\r\n    this.userProfileService.getProfileDetails(this.username)\r\n      .subscribe(\r\n        data => {\r\n          this.profileData = data;\r\n        },\r\n        err => {\r\n          this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n  }\r\n\r\n  getPractitioners() {\r\n    this.appointmentService.getAllPractitionerExceptMe(this.username).subscribe(\r\n      response => {\r\n        this.practitioners = response;\r\n      },\r\n      err => {\r\n        this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  selectedPractitioner(practitionerId: number){\r\n    this.appointmentService.updatePractitioner(this.username, practitionerId)\r\n    .subscribe(data => {\r\n      window.location.reload();\r\n    }, err => {\r\n      this.errorMessage = err.error.message;\r\n      this.toastr.error(this.errorMessage, 'Hiba!', {\r\n        timeOut: 3000,  positionClass: 'toast-top-center'\r\n      });\r\n    }\r\n  );\r\n  this.toastr.success('Kiválasztottál egy orvost!', 'OK', {\r\n    timeOut: 3000,  positionClass: 'toast-top-center',\r\n  });\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around stretch\" style=\"margin: auto;\" >\r\n<mat-card class=\"practitioner-card col-lg-3\" *ngFor=\"let practitioner of practitioners\">\r\n  <mat-card-header>\r\n    <mat-card-title id=\"practitioner-name\"><b>{{practitioner.patient.name}}</b></mat-card-title>\r\n    <mat-card-subtitle>{{practitioner.practitioner.specialization}}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <div class=\"img-container\">\r\n    <img *ngIf=\"practitioner?.patient?.picture\" src=\"{{preFilePath}}{{practitioner.username}}/{{practitioner.patient.picture}}\">\r\n    <img *ngIf=\"!practitioner?.patient?.picture\" src=\"https://history.ucr.edu/sites/g/files/rcwecm1916/files/styles/form_preview/public/blank-profile-picture-png.png?itok=MQ-iPuNG\">\r\n  </div>\r\n  <mat-card-content>\r\n    <div>\r\n    <mat-label><b>Munkahelyi cím:</b></mat-label><div>{{practitioner.practitioner.workingAddress}}</div>\r\n    <hr>\r\n    <div style=\"display: block;\">\r\n      <mat-label><b>Munkaidő:</b></mat-label>\r\n      <div *ngFor=\"let worktime of practitioner.practitioner.worktimes\">\r\n        <div *ngIf=\"worktime.fromTime != '0:00' && worktime.toTime != '0:00'\" style=\"position: relative;\">\r\n          <div *ngIf=\"worktime.day == 1\">Hétfő: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n          <div *ngIf=\"worktime.day == 2\">Kedd: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n          <div *ngIf=\"worktime.day == 3\">Szerda: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n          <div *ngIf=\"worktime.day == 4\">Csütörtök: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n          <div *ngIf=\"worktime.day == 5\">Péntek: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </mat-card-content>\r\n  <mat-card-actions  *ngIf=\"profileData.patient?.practitionerId; else inactive\">\r\n    <button *ngIf=\"profileData.patient.practitionerId == practitioner.practitioner?.id; else inactive\"\r\n      mat-raised-button color=\"warn\" (click)=\"selectedPractitioner(practitioner.practitioner.id)\">Aktív orvos\r\n    </button>\r\n  </mat-card-actions>\r\n  <ng-template #inactive>\r\n    <mat-card-actions>\r\n        <button style=\"margin-top: 0px; margin-bottom: 0px;\" #inactive mat-raised-button color=\"primary\" (click)=\"selectedPractitioner(practitioner.practitioner.id)\">Kiválaszt</button>\r\n    </mat-card-actions>\r\n</ng-template>\r\n</mat-card>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HolidaysDto } from 'src/app/dto/holidays-dto';\r\nimport { User } from 'src/app/model/user';\r\nimport { Worktime } from 'src/app/model/worktime';\r\nimport { AppointmentService } from 'src/app/service/appointment.service';\r\nimport { UserProfileService } from 'src/app/service/user-profile.service';\r\nimport { TokenService } from 'src/app/service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-worktime',\r\n  templateUrl: './worktime.component.html',\r\n  styleUrls: ['./worktime.component.css']\r\n})\r\nexport class WorktimeComponent implements OnInit {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n  errorMessage: string;\r\n\r\n  slotMinTime: string;\r\n  slotMaxTime: string;\r\n  defaultTimePerClient :number;\r\n  worksOnHoliday: boolean;\r\n\r\n  mondayStart: string = \"\";\r\n  tuesdayStart: string= \"\";\r\n  wednesdayStart: string= \"\";\r\n  thursdayStart: string= \"\";\r\n  fridayStart: string= \"\";\r\n\r\n  mondayEnd: string = \"\";\r\n  tuesdayEnd: string = \"\";\r\n  wednesdayEnd: string = \"\";\r\n  thursdayEnd: string = \"\";\r\n  fridayEnd: string = \"\";\r\n\r\n  worktime: Worktime;\r\n  worktimes: Array<Worktime>;\r\n\r\n  constructor( private toastr: ToastrService, private tokenService: TokenService,\r\n    private appointmentService : AppointmentService, private userProfileService: UserProfileService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile(){\r\n    this.profileData = new User();\r\n\r\n    this.userProfileService.getProfileDetails(this.username)\r\n      .subscribe(\r\n        data => {\r\n          this.profileData = data;\r\n          this.getBusinessHours();\r\n          this.getWorksOnHolidays();\r\n        },\r\n        err => {\r\n          this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getBusinessHours(){\r\n    this.appointmentService.getBusinessHours(this.username)\r\n    .subscribe(\r\n      data => {\r\n          this.mondayStart = data[0].fromTime;\r\n          this.mondayEnd = data[0].toTime;\r\n          this.tuesdayStart = data[1].fromTime;\r\n          this.tuesdayEnd = data[1].toTime;\r\n          this.wednesdayStart = data[2].fromTime;\r\n          this.wednesdayEnd = data[2].toTime;\r\n          this.thursdayStart = data[3].fromTime;\r\n          this.thursdayEnd = data[3].toTime;\r\n          this.fridayStart = data[4].fromTime;\r\n          this.fridayEnd = data[4].toTime;\r\n      },\r\n      error => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  getWorksOnHolidays(){\r\n    this.appointmentService.getHolidayWorksForWorktimeSettings(this.username)\r\n    .subscribe(\r\n      data => {\r\n        this.defaultTimePerClient = data.defaultTimePerClient;\r\n        this.slotMinTime = data.slotMinTime;\r\n        this.slotMaxTime = data.slotMaxTime;\r\n        this.worksOnHoliday = data.worksOnHoliday;\r\n      },\r\n      error => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.appointmentService.setBusinessHours(\r\n      this.username,\r\n      this.worktimes = [\r\n      new Worktime(1,1,this.mondayStart,this.mondayEnd),\r\n      new Worktime(2,2,this.tuesdayStart,this.tuesdayEnd),\r\n      new Worktime(3,3,this.wednesdayStart,this.wednesdayEnd),\r\n      new Worktime(4,4,this.thursdayStart,this.thursdayEnd),\r\n      new Worktime(5,5,this.fridayStart,this.fridayEnd),\r\n    ])\r\n      .subscribe(\r\n        data => {\r\n          this.toastr.success('Munkaidőd beállításra került!', 'OK', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        },\r\n        error => {\r\n\r\n        }\r\n      );\r\n\r\n      this.appointmentService.setWorksOnHolidays(this.username,\r\n        new HolidaysDto(\r\n          this.slotMinTime?this.slotMinTime:'06:00',\r\n          this.slotMaxTime?this.slotMaxTime:'20:00',\r\n          this.defaultTimePerClient?this.defaultTimePerClient:30,\r\n          this.worksOnHoliday)).subscribe(\r\n        data => {\r\n        },\r\n        error => {\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n<h2>Add meg, hogy mikor szeretnél dolgozni</h2><br>\r\n\r\n<div class=\"d-flex justify-content-center\">\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-content>\r\n      <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n        <h3>Hétfő</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"mondayStart\"\r\n              name=\"mondayStart\"\r\n              id=\"mondayStart\"\r\n              matInput\r\n              #mondayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"mondayEnd\"\r\n              name=\"mondayEnd\"\r\n              id=\"mondayEnd\"\r\n              matInput\r\n              #mondayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Kedd</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"tuesdayStart\"\r\n              name=\"tuesdayStart\"\r\n              id=\"tuesdayStart\"\r\n              matInput\r\n              #tuesdayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"tuesdayEnd\"\r\n              name=\"tuesdayEnd\"\r\n              id=\"tuesdayEnd\"\r\n              matInput\r\n              #tuesdayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Szerda</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"wednesdayStart\"\r\n              name=\"wednesdayStart\"\r\n              id=\"wednesdayStart\"\r\n              matInput\r\n              #wednesdayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"wednesdayEnd\"\r\n              name=\"wednesdayEnd\"\r\n              id=\"wednesdayEnd\"\r\n              matInput\r\n              #wednesdayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Csütörtök</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"thursdayStart\"\r\n              name=\"thursdayStart\"\r\n              id=\"thursdayStart\"\r\n              matInput\r\n              #thursdayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"thursdayEnd\"\r\n              name=\"thursdayEnd\"\r\n              id=\"thursdayEnd\"\r\n              matInput\r\n              #thursdayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Péntek</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"fridayStart\"\r\n              name=\"fridayStart\"\r\n              id=\"fridayStart\"\r\n              matInput\r\n              #fridayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"fridayEnd\"\r\n              name=\"fridayEnd\"\r\n              id=\"fridayEnd\"\r\n              matInput\r\n              #fridayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"slider\">\r\n          <mat-slide-toggle labelPosition=\"before\" name=\"worksOnHoliday\" [(ngModel)]=\"worksOnHoliday\" color=\"primary\">Munkaszüneti napok engedélyezése</mat-slide-toggle>\r\n        </div>\r\n\r\n        <div class=\"title-input\" style=\"text-align: center; padding: 0;\">\r\n          <h5>Konzultációs idő (perc): </h5>\r\n          <mat-form-field color=\"accent\" appearance=\"fill\" >\r\n            <input\r\n            [(ngModel)]=\"defaultTimePerClient\"\r\n            name=\"defaultTimePerClient\"\r\n            id=\"defaultTimePerClient\"\r\n            matInput\r\n            #defaultTimePerClientError=\"ngModel\"\r\n            pattern=\"[0-9]{2}\"\r\n            />\r\n            <mat-hint align=\"start\">Alapértelmezeten 30 perc</mat-hint>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <h3 style=\"margin-top: 20px;\">Intervallum</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              placeholder=\"pl. 6:00\"\r\n              [(ngModel)]=\"slotMinTime\"\r\n              name=\"slotMinTime\"\r\n              id=\"slotMinTime\"\r\n              matInput\r\n              #slotMinTimeError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              placeholder=\"pl. 20:00\"\r\n              [(ngModel)]=\"slotMaxTime\"\r\n              name=\"slotMaxTime\"\r\n              id=\"slotMaxTime\"\r\n              matInput\r\n              #slotMaxTimeError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <mat-card-actions>\r\n          <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n            <i class=\"fas fa-sign-in-alt\"></i> Munkaidő rögzítése\r\n          </button>\r\n        </mat-card-actions>\r\n\r\n      </form>\r\n\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { TokenService } from '../service/token.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LoginUser } from '../dto/login-user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginUser: LoginUser;\r\n  username: string;\r\n  password: string;\r\n  errorMessage: string;\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogin(): void{\r\n    this.loginUser = new LoginUser(this.username, this.password);\r\n    this.authService.login(this.loginUser).subscribe(\r\n      data => {\r\n        this.tokenService.setToken(data.token);\r\n        this.toastr.success('Sikeresen bejelentkeztél!', 'OK', {\r\n          timeOut: 3000, positionClass: 'toast-top-center'\r\n        });\r\n        this.router.navigate(['/']);\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error?.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n<div class=\"container d-flex justify-content-center\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <ul class=\"nav nav-tabs\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" routerLink=\"/login\">Bejelentkezés</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/registration\">Regisztráció</a>\r\n          </li>\r\n        </ul>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onLogin()\" novalidate>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Felhasználónév</mat-label>\r\n            <input name=\"username\" id=\"username\" matInput [(ngModel)]=\"username\" required>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Jelszó</mat-label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" matInput [(ngModel)]=\"password\" required>\r\n          </mat-form-field>\r\n\r\n          <div class=\"form-group\">\r\n            <button class=\"btn btn-outline-success btn-block\" [disabled]=\"!f.valid\"><i class=\"fas fa-sign-in-alt\"></i> Login </button>\r\n          </div>\r\n        </form>\r\n        <a id=\"forgot-password\" routerLink=\"/forgot-password\">Elfelejtettem a jelszavam</a>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NewUser } from '../dto/new-user';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  newUser: NewUser;\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n\r\n  errorMessage: string;\r\n\r\n  minDate = new Date(1900,1,1);\r\n  maxDate = new Date();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onRegister(): void{\r\n    this.newUser = new NewUser(this.name, this.username, this.email, this.password,\r\n      this.address, this.dateOfBorn, this.phoneNumber);\r\n    this.authService.addUser(this.newUser).subscribe(\r\n      data => {\r\n        this.toastr.success('Sikeres regisztráció!', 'OK', {\r\n          timeOut: 3000, positionClass: 'toast-top-center'\r\n        });\r\n\r\n        this.router.navigate(['/login']);\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n  <div class=\"container d-flex justify-content-center\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <ul class=\"nav nav-tabs\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\">Bejelentkezés</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" routerLink=\"/registration\">Regisztráció</a>\r\n          </li>\r\n        </ul>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onRegister()\" novalidate>\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Felhasználónév</mat-label>\r\n            <input\r\n              [(ngModel)]=\"username\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              matInput\r\n              #usernameError=\"ngModel\"\r\n              minlength=\"5\"\r\n              maxlength=\"15\"\r\n              pattern=\"[A-Za-z0-9]+\"\r\n              required\r\n            />\r\n            <mat-hint align=\"start\">Minimum 5, maximum 15 karakter.</mat-hint>\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"usernameError.invalid && usernameError.touched\"\r\n            >\r\n              <div *ngIf=\"usernameError.errors.required\">\r\n                Felhasználónév megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"usernameError.errors.minlength\">\r\n                Minimum {{ usernameError.errors.minlength.requiredLength }} karakter hosszúságú legyen!\r\n              </div>\r\n              <div *ngIf=\"usernameError.errors.pattern\">\r\n                Csak kis- és nagybetűket, illetve számokat tartalmazhat!\r\n              </div>\r\n            </div>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Jelszó</mat-label>\r\n            <input\r\n              [(ngModel)]=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              matInput\r\n              #passwordError=\"ngModel\"\r\n              minlength=\"8\"\r\n              maxlength=\"30\"\r\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"passwordError.invalid && passwordError.touched\"\r\n            >\r\n              <div *ngIf=\"passwordError.errors.required\">\r\n                Jelszó megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"passwordError.errors.minlength\">\r\n                Minimum {{ passwordError.errors.minlength.requiredLength }} karakter hosszúságú legyen!\r\n              </div>\r\n              <div *ngIf=\"passwordError.errors.pattern\">\r\n                Tartalmazzon számokat kis és nagybetűket.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\"\r\n              >Minimum 8, maximum 30 karakter hosszú, tartalmazzon számokat kis\r\n              és nagybetűket.</mat-hint\r\n            >\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Teljes név</mat-label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              matInput\r\n              maxlength=\"40\"\r\n              #nameError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"nameError.invalid && nameError.touched\"\r\n            >\r\n              <div *ngIf=\"nameError.errors.required\">\r\n                Név megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"nameError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Név megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              [(ngModel)]=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              matInput\r\n              #emailError=\"ngModel\"\r\n              pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"emailError.invalid && emailError.touched\"\r\n            >\r\n              <div *ngIf=\"emailError.errors.required\">\r\n                Email megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.pattern\">\r\n                Meg kell felelnie a mintának.\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Email cím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <label for=\"dateOfBorn\">Születési dátum:</label>\r\n            <input\r\n              name=\"dateOfBorn\"\r\n              id=\"dateOfBorn\"\r\n              matInput\r\n              [matDatepicker]=\"myDatePicker\"\r\n              [(ngModel)]=\"dateOfBorn\"\r\n              [min]=\"minDate\"\r\n              [max]=\"maxDate\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              [for]=\"myDatePicker\"\r\n              matSuffix\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatePicker></mat-datepicker>\r\n            <mat-hint align=\"start\">Jobb oldalt tudod kiválasztani</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Lakcím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"address\"\r\n              name=\"address\"\r\n              id=\"address\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              #addressError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"addressError.invalid && addressError.touched\"\r\n            >\r\n              <div *ngIf=\"addressError.errors.required\">\r\n                Lakcím megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"addressError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Lakcím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Telefonszám</mat-label>\r\n            <input\r\n              [(ngModel)]=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              matInput\r\n              maxlength=\"20\"\r\n              #phoneNumberError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"phoneNumberError.invalid && phoneNumberError.touched\"\r\n            >\r\n              <div *ngIf=\"phoneNumberError.errors.required\">\r\n                Telefonszám megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"phoneNumberError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Telefonszám megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n              <i class=\"fas fa-sign-in-alt\"></i> Regisztráció\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ClientCrudDto } from '../dto/client-crud-dto';\r\nimport { PractitionerDashboardService } from '../service/practitioner-dashboard.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n\r\n  username: string;\r\n  clients: Array<ClientCrudDto> = [];\r\n  errorMessage: string;\r\n  name: any;\r\n  totalRecords: number;\r\n  page:number = 1;\r\n\r\n  constructor(private service: PractitionerDashboardService, private tokenService: TokenService,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.username = this.tokenService.getUserName();\r\n    this.getClients();\r\n  }\r\n\r\n  getClients() {\r\n    this.service.getAllClient(this.username).subscribe(\r\n      response => {\r\n        this.clients = response;\r\n      },\r\n      error => {\r\n        // TODO: Error message\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAppointment(id: number) {\r\n    this.service.deleteAppointment(id)\r\n      .subscribe(\r\n        data => {\r\n          this.toastr.success('Foglalás törölve!', 'OK', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n          this.getClients();\r\n        },\r\n        err => {\r\n          this.errorMessage = err.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  search(){\r\n    if(this.name == \"\"){\r\n      this.ngOnInit();\r\n    } else{\r\n      this.clients = this.clients.filter(res=>{\r\n        return res.clientName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n","\r\n<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <div class=\"panel panel-primary\">\r\n    <div class=\"panel-heading\">\r\n      <h2>Kliens lista</h2>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n      <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"name\" (ngModelChange)=\"search()\" placeholder=\"Írd be a páciens nevét\">\r\n      <table class=\"table table-striped table-responsive-md\">\r\n        <thead>\r\n          <tr>\r\n            <th>Név</th>\r\n            <th>Időpont</th>\r\n            <th>Megjegyzés</th>\r\n            <th>Műveletek</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let client of clients | paginate: { id: 'listing_pagination',\r\n          itemsPerPage: 10,\r\n          currentPage: page,\r\n          totalItems: totalRecords }\">\r\n            <td>{{client.clientName}}</td>\r\n            <td>{{client.time | date: 'yyyy.MM.dd hh:mm'}}</td>\r\n            <td>{{client.message}}</td>\r\n            <td><button (click)=\"deleteAppointment(client.appointmentId)\" class=\"btn btn-success\"><i class=\"fas fa-check\"></i></button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <pagination-controls  id=\"listing_pagination\" maxSize=\"5\"\r\n        directionLinks=\"true\"\r\n        (pageChange)=\"page = $event\"></pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-common-questions',\n  templateUrl: './common-questions.component.html',\n  styleUrls: ['./common-questions.component.css']\n})\nexport class CommonQuestionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-main-nav></app-main-nav>\n<div class=\"container\">\n  <mat-accordion>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Mi célból jött létre az oldal?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Az oldal szakdolgozat készítés céljából jött létre. </p>\n      <p>Célja az, hogy az embereknek lehetőségük legyen általános konzultációkra időpontot<br>\n      foglalni és különböző szakterületű orvosokkal beszélgetni.<br></p>\n      <p>Megkönnyíti a páciensek és az orvosok dolgát azzal, hogy egy modern és egyszerűen kezelhető<br>\n      online felületen tudjanak időpontot foglalni, ezzel elkerülve a telefonálást vagy a sorbanállást.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Hogyan lehetek orvos?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Ha orvos szeretnél lenni, egy telefonos egyeztetést követően lesz lehetőséged erre.</p>\n      <p>Tel.:+36-30/123-2101</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Miért nincs feltüntetve a konzultációk ára?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>A konzultációk ára nem mindig határozható meg előre.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Ingyenes a foglalás?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Igen, a foglalás természetesen nem kerül semmibe.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Hova érkezzek?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Az orvos által megadott munkahelyi címre.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Időpont előtt mennyivel érkezzek?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Az általad lefoglalt időpont előtt 5-10 perccel célszerű megérkezni.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Hogy történik az időpontfoglalás?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Egyszerre egy orvoshoz egy időpontot foglalhatsz, <br>\n        viszont több orvosnál is lehet foglalásod egyidejűleg</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Mit tegyek, ha le kell mondanom a foglalásom?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Ha le szeretnél mondani egy foglalást, akkor kattints a foglalásodra,<br>\n      így egyszerűen vissza tudod mondani.</p>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n</div>\n","export class ForgotPasswordDto {\n  email: string;\n  constructor(email: string){\n    this.email = email;\n  }\n}\n","export class HolidaysDto {\r\n\r\n  slotMinTime: string;\r\n  slotMaxTime: string;\r\n  defaultTimePerClient :number;\r\n  worksOnHoliday: boolean;\r\n\r\n  constructor(slotMinTime: string, slotMaxTime: string, defaultTimePerClient :number, worksOnHoliday: boolean){\r\n    this.slotMinTime = slotMinTime;\r\n    this.slotMaxTime = slotMaxTime;\r\n    this.defaultTimePerClient = defaultTimePerClient;\r\n    this.worksOnHoliday = worksOnHoliday;\r\n  }\r\n}\r\n","export class JwtDto {\r\n  token: string;\r\n  constructor(token: string){\r\n    this.token = token;\r\n  }\r\n}\r\n","export class LoginUser {\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(username: string, password: string){\r\n    this.username = username;\r\n    this.password = password;\r\n  }\r\n}\r\n","export class NewUser {\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n\r\n  constructor(name: string, username: string, email: string, password: string,\r\n    address: string, dateOfBorn: Date, phoneNumber: string){\r\n    this.name = name;\r\n    this.username = username;\r\n    this.email = email;\r\n    this.password = password;\r\n    this.address = address;\r\n    this.dateOfBorn = dateOfBorn;\r\n    this.phoneNumber = phoneNumber;\r\n  }\r\n}\r\n","export class UpdatePasswordDto {\n  password: string;\n\n  constructor(password: string){\n    this.password = password;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ForgotPasswordDto } from '../dto/forgot-password-dto';\nimport { User } from '../model/user';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  email: string;\n  user: User;\n\n  constructor(private authService: AuthService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onSubmit(){\n    this.authService.forgotPassword(new ForgotPasswordDto(this.email)).subscribe(\n      data => {\n        this.toastr.success('Kérlek ellenőrizd a bejövő emaileket!', 'OK', {\n          timeOut: 3000,  positionClass: 'toast-top-center',\n        });\n      },\n      error => {\n        this.toastr.error('Ez az email nem tartozik egyetlen fiókhoz sem!', 'Hiba!', {\n          timeOut: 3000,  positionClass: 'toast-top-center',\n        });\n      }\n    );\n  }\n\n\n\n}\n","<app-main-nav></app-main-nav>\n<div class=\"container\">\n  <h2>Jelszó visszaállítása</h2>\n  <h3>Kérlek add meg az email címedet!</h3>\n\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <mat-form-field color=\"accent\">\n      <mat-label>Email</mat-label>\n      <input\n        [(ngModel)]=\"email\"\n        name=\"email\"\n        id=\"email\"\n        matInput\n        #emailError=\"ngModel\"\n        pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\n      />\n    </mat-form-field>\n    <br>\n      <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\n        <i class=\"fas fa-sign-in-alt\"></i> Küldés\n      </button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if(this.tokenService.isLogged()){\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdGuardService implements CanActivate {\r\n\r\n  realRole: string;\r\n  realRole2: string;\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private router: Router\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n      const expectedRole = route.data.expectedRole;\r\n      this.realRole = this.tokenService.IsAdmin ? 'admin' : 'patient';\r\n      this.realRole2 = this.tokenService.IsPractitioner ? 'practitioner' : 'patient';\r\n      if (!this.tokenService.isLogged() || expectedRole.indexOf(this.realRole) < 0 && expectedRole.indexOf(this.realRole2) < 0) {\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  username: string;\r\n\r\n  constructor(private tokenService: TokenService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.username = this.tokenService.getUserName();\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n<div class=\"container text-center\">\r\n  <h2 *ngIf=\"!username\">Üdvözöllek idegen!</h2>\r\n  <h2 *ngIf=\"username\">Üdvözöllek {{username}}!</h2>\r\n</div>\r\n\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, concatMap } from 'rxjs/operators';\r\nimport { JwtDto } from '../dto/jwt-dto';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private tokenService: TokenService, private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\r\n\r\n    if(!this.tokenService.isLogged()){\r\n      return next.handle(req);\r\n    }\r\n\r\n    let intReq = req;\r\n    const token = this.tokenService.getToken();\r\n\r\n    intReq = this.addToken(req, token);\r\n\r\n    return next.handle(intReq).pipe(catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 401) {\r\n        const dto: JwtDto = new JwtDto(this.tokenService.getToken());\r\n        return this.authService.refresh(dto).pipe(concatMap((data: any) => {\r\n          this.tokenService.setToken(data.token);\r\n          intReq = this.addToken(req, data.token);\r\n          return next.handle(intReq);\r\n        }));\r\n      } else {\r\n        //this.tokenService.logOut();\r\n        return throwError(error);\r\n      }\r\n    }));\r\n  }\r\n\r\n  private addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\r\n    return req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n}\r\n\r\nexport const interceptorProvider = [{provide: HTTP_INTERCEPTORS, useClass: UserInterceptorService, multi: true}];\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { TokenService } from '../service/token.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-main-nav',\r\n  templateUrl: './main-nav.component.html',\r\n  styleUrls: ['./main-nav.component.css']\r\n})\r\nexport class MainNavComponent {\r\n\r\n  isLogged = false;\r\n  isPatient = false;\r\n  isPractitioner = false;\r\n  isAdmin = false;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, private tokenService: TokenService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isLogged = this.tokenService.isLogged();\r\n    this.isAdmin = this.tokenService.IsAdmin();\r\n    this.isPractitioner = this.tokenService.IsPractitioner();\r\n    this.isPatient = this.tokenService.IsPatient();\r\n  }\r\n\r\n  onLogout(): void {\r\n      this.tokenService.logOut();\r\n      window.location.reload()\r\n      this.router.navigate(['/']);\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"(isHandset$ | async) === false\">\r\n\r\n    <mat-toolbar>\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n        <i class=\"fas fa-bars\"></i>\r\n      </button>\r\n      Menü\r\n    </mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-button *ngIf=\"!isLogged\" routerLink=\"/frequently-asked-questions\" class=\"sidelistelements\"><i class=\"fas fa-question\"></i> Gyakori kérdések </a>\r\n      <a mat-button *ngIf=\"isPatient\" routerLink=\"/profile\" class=\"sidelistelements\"><i class=\"fas fa-user-circle\"></i> Adatlap </a>\r\n      <a mat-button *ngIf=\"isPractitioner\" routerLink=\"/practitioner-dashboard\" class=\"sidelistelements\"><i class=\"fas fa-notes-medical\"></i> Kliensek </a>\r\n      <a mat-button *ngIf=\"isPractitioner\" routerLink=\"/appointment/worktimes\" class=\"sidelistelements\"><i class=\"fas fa-business-time\"></i> Munkaidő módosítása </a>\r\n      <a mat-button *ngIf=\"isPatient\" routerLink=\"/appointment/update-practitioner\" class=\"sidelistelements\"><i class=\"fas fa-user-md\"></i> Orvos kiválasztása </a>\r\n      <a mat-button *ngIf=\"isPatient\" routerLink=\"/appointment/reservation\" class=\"sidelistelements\"><i class=\"far fa-calendar-check\"></i> Időpontfoglalás </a>\r\n      <a mat-button *ngIf=\"isAdmin\" routerLink=\"/practitioners\" class=\"sidelistelements\"><i class=\"far fa-address-book\"></i> Orvosok </a>\r\n      <a mat-button *ngIf=\"isAdmin\" routerLink=\"/patients\" class=\"sidelistelements\"><i class=\"fas fa-address-book\"></i> Páciensek </a>\r\n      <a mat-raised-button color=\"primary\" *ngIf=\"!isLogged\" routerLink=\"/login\" class=\"sidelistelements\"><i class=\"fas fa-sign-in-alt\"></i> Bejelentkezés </a>\r\n      <a mat-raised-button color=\"warn\" *ngIf=\"isLogged\" (click)=\"onLogout()\" style=\"cursor: pointer;\" class=\"sidelistelements\"><i class=\"fas fa-door-open\"></i> Kijelentkezés </a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar>\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n        <i class=\"fas fa-bars\"></i>\r\n      </button>\r\n      <i class=\"fas fa-plus-square\"></i>\r\n       <span id=\"title\"> &nbsp; Egészségügyi Időpontfoglaló Rendszer</span>\r\n    </mat-toolbar>\r\n    <!--More code here-->\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface DialogData {\n  title: string;\n  paragraph: string;\n  instructions: string;\n}\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n}\n","<h2 mat-dialog-title>{{data.title}}</h2>\n<h4 mat-dialog-title>{{data.paragraph}}</h4>\n\n<mat-form-field style=\"width: 100%; margin: auto;\" *ngIf=\"data.title == 'Ha szeretnéd, írd le a problémádat pár szóban'\">\n  <input matInput [(ngModel)]=\"data.instructions\">\n</mat-form-field>\n\n<mat-dialog-actions style=\"margin: auto; display: block;\">\n  <button mat-button mat-dialog-close>Nem</button>\n  <button *ngIf=\"data.instructions\" style=\"float: right;\" mat-button [mat-dialog-close]=\"data.instructions\" cdkFocusInitial>Igen</button>\n  <button *ngIf=\"!data.instructions\" style=\"float: right;\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Igen</button>\n</mat-dialog-actions>\n","import { Patient } from \"./patient\";\r\nimport { Practitioner } from \"./practitioner\";\r\n\r\nexport class Appointment {\r\n\r\n  constructor(\r\n    public id: string,\r\n    public message: string = null,\r\n    public time: string = null,\r\n    public patient: Patient = null,\r\n    public practitioner: Practitioner = null\r\n    ){}\r\n\r\n}\r\n","import { Patient } from './patient';\r\nimport { Practitioner } from './practitioner';\r\nimport { Role } from './role';\r\n\r\nexport class User {\r\n\r\n  constructor(\r\n    public id: number = null,\r\n    public username: string = null,\r\n    public password: string = null,\r\n    public activation: string = null,\r\n    public isenabled: boolean = false,\r\n    public roles: Array<Role> = [],\r\n    public patient: Patient = null,\r\n    public practitioner: Practitioner = null\r\n    ){}\r\n\r\n\r\n}\r\n","export class Worktime {\r\n  constructor(\r\n    public id: number = null,\r\n    public day: number = null,\r\n    public fromTime: string = null,\r\n    public toTime: string = null,\r\n  ){}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserProfileService } from '../service/user-profile.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-password-update',\r\n  templateUrl: './password-update.component.html',\r\n  styleUrls: ['./password-update.component.css']\r\n})\r\nexport class PasswordUpdateComponent implements OnInit {\r\n\r\nusername: string;\r\npassword: string;\r\nconfirmpassword: string;\r\nerrorMessage: string;\r\n\r\nconstructor(private tokenService: TokenService, private userProfileService: UserProfileService,\r\n  private toastr: ToastrService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.username = this.tokenService.getUserName();\r\n  }\r\n\r\n  editProfile() {\r\n    this.userProfileService.updatePassword(this.username, this.password)\r\n      .subscribe(data => {\r\n        this.toastr.success('', 'Sikeres jelszó módosítás!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        this.gotoList();\r\n      }, err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        console.log(err)\r\n      }\r\n    );\r\n  }\r\n\r\n  gotoList(){\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.editProfile();\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <h3>Jelszó módosítása</h3>\r\n  <div style=\"width: 100%; max-width: 400px\">\r\n\r\n    <form (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\">\r\n\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Új Jelszó</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          minlength=\"8\"\r\n          maxlength=\"30\"\r\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n          [(ngModel)]=\"password\"\r\n          #passwordError=\"ngModel\"\r\n        /><div\r\n        class=\"alert alert-danger\"\r\n        *ngIf=\"passwordError.invalid && passwordError.touched\"\r\n        >\r\n          <div *ngIf=\"passwordError.errors.minlength\">\r\n            Minimum {{ passwordError.errors.minlength.requiredLength }} karakter hosszúságú legyen!\r\n          </div>\r\n          <div *ngIf=\"passwordError.errors.pattern\">\r\n            Tartalmazzon számokat kis és nagybetűket.\r\n          </div>\r\n        </div>\r\n        <mat-hint align=\"start\"\r\n          >Minimum 8, maximum 30 karakter hosszú, tartalmazzon számokat kis\r\n          és nagybetűket.</mat-hint\r\n        >\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Jelszó ismétlés</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          id=\"password_repeat\"\r\n          pattern=\"{{ password }}\"\r\n          #cpass=\"ngModel\"\r\n          name=\"password_repeat\"\r\n          [(ngModel)]=\"confirmpassword\"\r\n          required\r\n        />\r\n        <span class=\"text-danger\" *ngIf=\"cpass.errors?.pattern\"\r\n          >hibás jelszóismétlés</span\r\n        >\r\n      </div>\r\n\r\n      <button color=\"primary\" mat-raised-button>\r\n        <i class=\"far fa-save\"></i> Módosítás\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../model/user';\r\nimport { UserProfileService } from '../service/user-profile.service';\r\nimport { TokenService } from '../service/token.service';\r\nimport { UploadFileService } from '../service/upload-file.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-update',\r\n  templateUrl: './profile-update.component.html',\r\n  styleUrls: ['./profile-update.component.css']\r\n})\r\nexport class ProfileUpdateComponent implements OnInit {\r\n\r\n  username: string;\r\n  updateProfile: User;\r\n  isPractitioner = false;\r\n  errorMessage: string;\r\n\r\n  name: string;\r\n  email: string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n  workingAddress: string;\r\n  specialization: string;\r\n  picture: string;\r\n\r\n  minDate = new Date(1900,1,1);\r\n  maxDate = new Date();\r\n\r\n  constructor(private tokenService: TokenService, private userProfileService: UserProfileService,\r\n              private toastr: ToastrService, private router: Router, private uploadService: UploadFileService,\r\n              private https: HttpClient, public matDialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.updateProfile = new User();\r\n    this.username = this.tokenService.getUserName();\r\n    this.isPractitioner = this.tokenService.IsPractitioner();\r\n\r\n    this.userProfileService.getProfileDetails(this.username)\r\n    .subscribe(data => {\r\n      this.updateProfile = data;\r\n      this.name = this.updateProfile.patient.name;\r\n      this.email = this.updateProfile.patient.email;\r\n      this.address = this.updateProfile.patient.address;\r\n      this.dateOfBorn = this.updateProfile.patient.dateOfBorn;\r\n      this.phoneNumber = this.updateProfile.patient.phoneNumber;\r\n      this.picture = this.updateProfile.patient.picture;\r\n      this.preFilePath = this.preFilePath+this.username+'/'+this.picture;\r\n      if(this.isPractitioner == true){\r\n        this.workingAddress = this.updateProfile.practitioner.workingAddress;\r\n        this.specialization = this.updateProfile.practitioner.specialization;\r\n      }\r\n    }, error => console.log(error));\r\n\r\n\r\n  }\r\n\r\n  editProfile() {\r\n    this.updateProfile.patient.name = this.name;\r\n    this.updateProfile.patient.email = this.email;\r\n    this.updateProfile.patient.address = this.address;\r\n    this.updateProfile.patient.dateOfBorn = this.dateOfBorn;\r\n    this.updateProfile.patient.phoneNumber = this.phoneNumber;\r\n    this.updateProfile.patient.picture = this.picture;\r\n    this.preFilePath = this.preFilePath+this.username+'/'+this.picture;\r\n    if(this.isPractitioner == true){\r\n      this.updateProfile.practitioner.workingAddress = this.workingAddress;\r\n      this.updateProfile.practitioner.specialization = this.specialization;\r\n    }\r\n\r\n    this.userProfileService.updateProfile(this.username, this.updateProfile)\r\n      .subscribe(data => {\r\n        this.toastr.success('Profilodat módosítottad!', 'OK', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        this.gotoList();\r\n      }, err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        console.log(err)\r\n      }\r\n    );\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.editProfile();\r\n  }\r\n\r\n\r\n  selectedFiles: FileList;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  changeImage = false;\r\n  preFilePath = 'https://s3.us-east-2.amazonaws.com/onlinehealthcaresystem/';\r\n\r\n  deletePicture() {\r\n    this.uploadService.deleteFileFromStorage(this.username, this.picture).subscribe(res => {\r\n      this.picture = null;\r\n    });\r\n  }\r\n\r\n  uploadPicture() {\r\n    this.progress.percentage = 0;\r\n    const currentFileUpload = this.selectedFiles.item(0);\r\n    this.uploadService.pushFileToStorageMine(this.username, currentFileUpload).subscribe(event => {\r\n      this.selectedFiles = undefined;\r\n    });\r\n    this.picture =  this.updateProfile.patient.picture;\r\n    this.toastr.success('Profilodat módosítottad!', 'OK', {\r\n      timeOut: 3000,  positionClass: 'toast-top-center',\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n  <div class=\"container d-flex justify-content-center\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <h4><b>Profil módosítása</b></h4>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"photo\">\r\n          <img *ngIf=\"picture\" src=\"{{preFilePath}}\">\r\n          <img *ngIf=\"!picture\" src=\"https://history.ucr.edu/sites/g/files/rcwecm1916/files/styles/form_preview/public/blank-profile-picture-png.png?itok=MQ-iPuNG\">\r\n          <br>\r\n          <button (click)=\"deletePicture()\" color=\"warn\" mat-raised-button>\r\n            <i class=\"fas fa-trash\"></i> Törlés\r\n          </button>\r\n          <br>\r\n          <input type=\"file\" accept=\"image/*\" id=\"customFile\" (change)=\"selectFile($event)\" title=\"\" placeholder=\"Fájl kiválasztása\">\r\n          <br>\r\n          <button (click)=\"uploadPicture()\" color=\"primary\" mat-raised-button>\r\n            <i class=\"far fa-save\"></i> Profilkép mentése\r\n          </button>\r\n        </div>\r\n        <br><hr>\r\n\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Teljes név</mat-label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              matInput\r\n              maxlength=\"40\"\r\n              #nameError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"nameError.invalid && nameError.touched\"\r\n            >\r\n              <div *ngIf=\"nameError.errors.required\">\r\n                Név megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"nameError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Név megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              [(ngModel)]=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              matInput\r\n              #emailError=\"ngModel\"\r\n              maxlength=\"40\"\r\n              pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"emailError.invalid && emailError.touched\"\r\n            >\r\n              <div *ngIf=\"emailError.errors.required\">\r\n                Email megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.pattern\">\r\n                Meg kell felelnie a mintának.\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Email cím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <label for=\"dateOfBorn\">Születési dátum:</label>\r\n            <input\r\n              name=\"dateOfBorn\"\r\n              id=\"dateOfBorn\"\r\n              matInput\r\n              [matDatepicker]=\"myDatePicker\"\r\n              [(ngModel)]=\"dateOfBorn\"\r\n              [min]=\"minDate\"\r\n              [max]=\"maxDate\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              [for]=\"myDatePicker\"\r\n              matSuffix\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatePicker></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Lakcím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"address\"\r\n              name=\"address\"\r\n              id=\"address\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              #addressError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"addressError.invalid && addressError.touched\"\r\n            >\r\n              <div *ngIf=\"addressError.errors.required\">\r\n                Lakcím megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"addressError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Lakcím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Telefonszám</mat-label>\r\n            <input\r\n              [(ngModel)]=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              matInput\r\n              maxlength=\"20\"\r\n              #phoneNumberError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"phoneNumberError.invalid && phoneNumberError.touched\"\r\n            >\r\n              <div *ngIf=\"phoneNumberError.errors.required\">\r\n                Telefonszám megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"phoneNumberError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Telefonszám megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\" *ngIf=\"isPractitioner\">\r\n            <mat-label>Munkahelyi cím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"workingAddress\"\r\n              name=\"workingAddress\"\r\n              id=\"workingAddress\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              required\r\n            />\r\n            <mat-hint align=\"start\">Akkor is add meg, ha megegyezik a lakcímmel!</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\" *ngIf=\"isPractitioner\">\r\n            <mat-label>Szakterület</mat-label>\r\n            <input\r\n              [(ngModel)]=\"specialization\"\r\n              name=\"specialization\"\r\n              id=\"specialization\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n              <i class=\"far fa-save\"></i> Módosítás\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../model/user';\r\nimport { UserProfileService } from '../service/user-profile.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n  isPractitioner = false;\r\n  preFilePath = 'https://s3.us-east-2.amazonaws.com/onlinehealthcaresystem/';\r\n\r\n  constructor(private router: Router, private userProfileService: UserProfileService,\r\n              private tokenService: TokenService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.getProfile();\r\n    this.isPractitioner = this.tokenService.IsPractitioner();\r\n    }\r\n\r\n    getProfile(){\r\n      this.profileData = new User();\r\n\r\n      this.userProfileService.getProfileDetails(this.username)\r\n        .subscribe(\r\n          data => {\r\n            this.profileData = data;\r\n            this.preFilePath = this.preFilePath + this.username + \"/\" + this.profileData.patient.picture;\r\n          },\r\n          err => {\r\n            this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n              timeOut: 3000,  positionClass: 'toast-top-center',\r\n            });\r\n            console.log(err)\r\n          }\r\n\r\n        );\r\n    }\r\n\r\n    updateProfile(){\r\n      this.router.navigate(['profile/update']);\r\n    }\r\n\r\n    updatePassword(){\r\n      this.router.navigate(['profile/password-update']);\r\n    }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <h2>Profil adatok</h2>\r\n  <hr/>\r\n\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-content>\r\n      <img *ngIf=\"profileData?.patient?.picture\" src=\"{{preFilePath}}\">\r\n      <img *ngIf=\"!profileData?.patient?.picture\" src=\"https://history.ucr.edu/sites/g/files/rcwecm1916/files/styles/form_preview/public/blank-profile-picture-png.png?itok=MQ-iPuNG\">\r\n      <div>\r\n        <label><b>Név: </b></label> {{profileData?.patient?.name}}\r\n      </div>\r\n      <div>\r\n        <label><b>Felhasználónév: </b></label> {{profileData.username}}\r\n      </div>\r\n      <div>\r\n        <label><b>Email: </b></label> {{profileData?.patient?.email}}\r\n      </div>\r\n      <div>\r\n        <label><b>Születési dátum: </b></label> {{profileData?.patient?.dateOfBorn}}\r\n      </div>\r\n      <div>\r\n        <label><b>Lakcím: </b></label> {{profileData?.patient?.address}}\r\n      </div>\r\n      <div>\r\n        <label><b>Telefonszám: </b></label> {{profileData?.patient?.phoneNumber}}\r\n      </div>\r\n      <div *ngIf=\"isPractitioner\">\r\n        <label><b>Munkahelyi cím: </b></label> {{profileData?.practitioner?.workingAddress}}\r\n      </div>\r\n      <div *ngIf=\"isPractitioner\">\r\n        <label><b>Szakterület: </b></label> {{profileData?.practitioner?.specialization}}\r\n      </div>\r\n      <button (click)=\"updateProfile()\" class=\"btn btn-info\" style=\"margin-right: 10px\">Módosítás</button>\r\n      <button (click)=\"updatePassword()\" class=\"btn btn-info\" style=\"margin-right: 10px\">Jelszó megváltoztatása</button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UpdatePasswordDto } from '../dto/update-password-dto';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  password: string;\n  confirmpassword: string;\n\n  constructor(private authService: AuthService, private router: Router,\n    private activatedRoute: ActivatedRoute, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.resetPassword();\n  }\n\n  resetPassword(){\n    this.authService.resetPassword(this.activatedRoute.snapshot.url[1].path).subscribe(\n      data => {\n      },\n      error => {\n      }\n    );\n  }\n\n  onSubmit(){\n    this.authService.updatePassword(this.activatedRoute.snapshot.url[1].path, new UpdatePasswordDto(this.password)).subscribe(\n      data => {\n        this.toastr.success('Sikeres jelszómódosítás!', 'OK', {\n          timeOut: 3000,  positionClass: 'toast-top-center',\n        });\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.toastr.error('Sikertelen jelszómódosítás!', 'Hiba!', {\n          timeOut: 3000,  positionClass: 'toast-top-center',\n        });\n      }\n    );\n  }\n\n}\n","<app-main-nav></app-main-nav>\n<div class=\"container\">\n  <h3>Jelszó módosítása</h3>\n  <div style=\"width: 100%; max-width: 400px\">\n\n    <form (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\">\n\n\n      <div class=\"form-group\">\n        <label for=\"password\">Új Jelszó</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password\"\n          name=\"password\"\n          minlength=\"8\"\n          maxlength=\"30\"\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n          [(ngModel)]=\"password\"\n          #passwordError=\"ngModel\"\n        /><div\n        class=\"alert alert-danger\"\n        *ngIf=\"passwordError.invalid && passwordError.touched\"\n        >\n          <div *ngIf=\"passwordError.errors.minlength\">\n            Minimum {{ passwordError.errors.minlength.requiredLength }} karakter hosszúságú legyen!\n          </div>\n          <div *ngIf=\"passwordError.errors.pattern\">\n            Tartalmazzon számokat kis és nagybetűket.\n          </div>\n        </div>\n        <mat-hint align=\"start\"\n          >Minimum 8, maximum 30 karakter hosszú, tartalmazzon számokat kis\n          és nagybetűket.</mat-hint\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Jelszó ismétlés</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password_repeat\"\n          pattern=\"{{ password }}\"\n          #cpass=\"ngModel\"\n          name=\"password_repeat\"\n          [(ngModel)]=\"confirmpassword\"\n          required\n        />\n        <span class=\"text-danger\" *ngIf=\"cpass.errors?.pattern\"\n          >hibás jelszóismétlés</span\n        >\n      </div>\n\n      <button color=\"primary\" mat-raised-button>\n        <i class=\"far fa-save\"></i> Módosítás\n      </button>\n    </form>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminDashboardService {\r\n\r\n  dashboardURL = environment.dashboardURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAllPatient(): Observable<Array<User>>{\r\n    return this.httpClient.get<Array<User>>(this.dashboardURL+'patients');\r\n  }\r\n\r\n  public getPatientById(id: number): Observable<User>{\r\n    return this.httpClient.get<User>(this.dashboardURL+'patients/details/' + id);\r\n  }\r\n\r\n  public updatePatient(id: number, practitioner: User): Observable<User>{\r\n    return this.httpClient.put<User>(this.dashboardURL+'patients/update/' + id, practitioner);\r\n  }\r\n\r\n  public upgradeToPractitioner(id: number){\r\n    return this.httpClient.get(this.dashboardURL+'patients/upgrade-to-practitioner/' + id);\r\n  }\r\n\r\n  public downgradeToPatient(id: number){\r\n    return this.httpClient.get(this.dashboardURL+'practitioner/downgrade-to-patient/' + id);\r\n  }\r\n\r\n  public deletePatient(id: number){\r\n    return this.httpClient.delete(this.dashboardURL + 'patients/delete/' + id);\r\n  }\r\n\r\n  public getAllPractitioner(): Observable<Array<User>>{\r\n    return this.httpClient.get<Array<User>>(this.dashboardURL+'practitioners');\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HolidaysDto } from '../dto/holidays-dto';\r\nimport { InstructionDto } from '../dto/instruction-dto';\r\nimport { Appointment } from '../model/appointment';\r\nimport { User } from '../model/user';\r\nimport { Worktime } from '../model/worktime';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n  appointmentURL = environment.appointmentURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAllPractitionerExceptMe(name: string): Observable<Array<User>>{\r\n    return this.httpClient.get<Array<User>>(this.appointmentURL+'schedule-practitioners/' + name);\r\n  }\r\n\r\n  public updatePractitioner(username: string, practitionerId: number){\r\n    return this.httpClient.put(this.appointmentURL+'update-practitioner/' + username, practitionerId);\r\n  }\r\n\r\n  public saveAppointment(username: string, appointment: Appointment){\r\n    return this.httpClient.post(this.appointmentURL+'create/'+username, appointment);\r\n  }\r\n\r\n  public getAppointments(username: string): Observable<Array<Appointment>>{\r\n    return this.httpClient.get<Array<Appointment>>(this.appointmentURL+'show/'+ username);\r\n  }\r\n\r\n  public showAppointmentsForInstruction(username: string): Observable<Array<InstructionDto>>{\r\n    return this.httpClient.get<Array<InstructionDto>>(this.appointmentURL+'show-appointments-for-instruction/'+ username);\r\n  }\r\n\r\n  public getOthersAppointments(username: string): Observable<Array<Appointment>>{\r\n    return this.httpClient.get<Array<Appointment>>(this.appointmentURL+'show-others-appointments/' + username);\r\n  }\r\n\r\n  public deleteAppointment(id: string){\r\n    return this.httpClient.delete(this.appointmentURL+'delete/'+ id);\r\n  }\r\n\r\n  public setBusinessHours(username: string, worktimes: Worktime[]){\r\n    return this.httpClient.put(this.appointmentURL+'set-business-hours/' + username, worktimes);\r\n  }\r\n\r\n  public getBusinessHours(username: string){\r\n    return this.httpClient.get<Array<Worktime>>(this.appointmentURL+'get-business-hours/' + username);\r\n  }\r\n\r\n  public myPractitionerWorkingTime(username: string){\r\n    return this.httpClient.get<Array<Worktime>>(this.appointmentURL+'my-practitioner-working-time/' + username);\r\n  }\r\n\r\n  public setWorksOnHolidays(username: string, worksOnHoliday: HolidaysDto){\r\n    return this.httpClient.post(this.appointmentURL+'works-on-holidays/' + username, worksOnHoliday);\r\n  }\r\n\r\n  public getHolidayWorksForWorktimeSettings(username: string){\r\n    return this.httpClient.get<HolidaysDto>(this.appointmentURL+'works-on-holidays/'+ username);\r\n  }\r\n\r\n  public getWorksOnHolidays(username: string){\r\n    return this.httpClient.get<HolidaysDto>(this.appointmentURL+'my-practitioner-works-on-holidays/'+ username);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ForgotPasswordDto } from '../dto/forgot-password-dto';\r\nimport { JwtDto } from '../dto/jwt-dto';\r\nimport { LoginUser } from '../dto/login-user';\r\nimport { NewUser } from '../dto/new-user';\r\nimport { UpdatePasswordDto } from '../dto/update-password-dto';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  authURL = environment.authURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public addUser(newUser: NewUser): Observable<any>{\r\n    return this.httpClient.post<any>(this.authURL+'registration',newUser);\r\n  }\r\n\r\n  public login(loginUser: LoginUser): Observable<JwtDto>{\r\n    return this.httpClient.post<JwtDto>(this.authURL+'login',loginUser);\r\n  }\r\n\r\n  public refresh(dto: JwtDto): Observable<JwtDto>{\r\n    return this.httpClient.post<JwtDto>(this.authURL+'refresh',dto);\r\n  }\r\n\r\n  public forgotPassword(email: ForgotPasswordDto){\r\n    return this.httpClient.post<User>(this.authURL+'forgot-password',email);\r\n  }\r\n\r\n  public resetPassword(code: string): Observable<User>{\r\n    return this.httpClient.get<User>(this.authURL+'reset-password/'+code);\r\n  }\r\n\r\n  public updatePassword(code: string, password: UpdatePasswordDto){\r\n    return this.httpClient.post<User>(this.authURL+'update-password/'+code, password);\r\n  }\r\n\r\n  public activation(code: string){\r\n    return this.httpClient.get(this.authURL+'activation/'+code);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ClientCrudDto } from '../dto/client-crud-dto';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PractitionerDashboardService {\r\n\r\n  dashboardURL = environment.practitionerDashboardURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAllClient(practitionerUsername: string): Observable<Array<ClientCrudDto>>{\r\n    return this.httpClient.get<Array<ClientCrudDto>>(this.dashboardURL+'show-my-clients/'+practitionerUsername);\r\n  }\r\n\r\n  /*\r\n  public updatePatient(id: number, practitioner: User): Observable<User>{\r\n    return this.httpClient.put<User>(this.dashboardURL+'patients/update/' + id, practitioner);\r\n  }\r\n  */\r\n\r\n  public deleteAppointment(id: number){\r\n    return this.httpClient.delete(this.dashboardURL + 'clients/delete-appointment/' + id);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nconst TOKEN_KEY = 'AuthToken';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  roles: Array<string> = [];\r\n\r\n  constructor(\r\n    private router : Router\r\n  ) {}\r\n\r\n  public setToken(token: string): void{\r\n    window.localStorage.removeItem(TOKEN_KEY);\r\n    window.localStorage.setItem(TOKEN_KEY,token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public isLogged(): boolean{\r\n    if(this.getToken()){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public getUserName(): string {\r\n    if(!this.isLogged()){\r\n      return null;\r\n    }\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded);\r\n    const username = values.sub;\r\n    return username;\r\n  }\r\n\r\n  public IsAdmin(): boolean {\r\n    if(!this.isLogged()){\r\n      return false;\r\n    }\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded);\r\n    const roles = values.roles;\r\n    if(roles.indexOf('ROLE_ADMIN') < 0){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public IsPractitioner(): boolean {\r\n    if(!this.isLogged()){\r\n      return false;\r\n    }\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded);\r\n    const roles = values.roles;\r\n    if(roles.indexOf('ROLE_PRACTITIONER')<0){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public IsPatient(): boolean {\r\n    if(!this.isLogged()){\r\n      return false;\r\n    }\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded);\r\n    const roles = values.roles;\r\n    if(roles.indexOf('ROLE_PATIENT')<0){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public logOut():void{\r\n    window.localStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { HttpClient, HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadFileService {\n\n  patientURL = environment.patientURL;\n\n  constructor(private https: HttpClient) { }\n\n  pushFileToStorageMine(username: string, file: File): Observable<HttpEvent<{}>> {\n    const data: FormData = new FormData();\n    data.append('file', file);\n    const newRequest = new HttpRequest('POST', this.patientURL + 'uploadFile/' + username, data, {\n        reportProgress: true,\n        responseType: 'text'\n    });\n    return this.https.request(newRequest);\n  }\n\n  deleteFileFromStorage(username: string, filename: String): Observable<HttpEvent<{}>> {\n        const newRequest = new HttpRequest('POST', this.patientURL + 'deleteFile/' + username, filename, {\n            responseType: 'text'\n        });\n        return this.https.request(newRequest);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserProfileService {\r\n\r\n  patientURL = environment.patientURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getProfileDetails(username: string): Observable<User>{\r\n    return this.httpClient.get<User>(this.patientURL+'details/' + username);\r\n  }\r\n\r\n  public updateProfile(username: string, profile: User): Observable<User>{\r\n    return this.httpClient.put<User>(this.patientURL+'update/' + username, profile);\r\n  }\r\n\r\n  public updatePassword(username: string, password: string){\r\n    return this.httpClient.put(this.patientURL+'password-update/' + username, password);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  authURL: \"http://localhost:8080/auth/\",\r\n  patientURL: \"http://localhost:8080/api/profile/\",\r\n  dashboardURL: \"http://localhost:8080/api/dashboard/\",\r\n  appointmentURL: \"http://localhost:8080/api/appointment/\",\r\n  practitionerDashboardURL: \"http://localhost:8080/api/practitioner-dashboard/\"\r\n  // ng build --prod\r\n /*   authURL: \"https://onlinehealthcaresystem.herokuapp.com/auth/\",\r\n    patientURL: \"https://onlinehealthcaresystem.herokuapp.com/api/profile/\",\r\n    dashboardURL : \"https://onlinehealthcaresystem.herokuapp.com/api/dashboard/\",\r\n    appointmentURL: \"https://onlinehealthcaresystem.herokuapp.com/api/appointment/\",\r\n    practitionerDashboardURL: \"https://onlinehealthcaresystem.herokuapp.com/api/practitioner-dashboard/\"*/\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}