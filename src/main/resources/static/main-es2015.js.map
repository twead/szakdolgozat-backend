{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/activation/activation.component.ts","./src/app/activation/activation.component.html","./src/app/admin-dashboard/patient-list/patient-details.component.ts","./src/app/admin-dashboard/patient-list/patient-details.component.html","./src/app/admin-dashboard/patient-list/patient-list.component.ts","./src/app/admin-dashboard/patient-list/patient-list.component.html","./src/app/admin-dashboard/patient-list/patient-update.component.ts","./src/app/admin-dashboard/patient-list/patient-update.component.html","./src/app/admin-dashboard/practitioner-list/general-practitioner-details.component.ts","./src/app/admin-dashboard/practitioner-list/general-practitioner-details.component.html","./src/app/admin-dashboard/practitioner-list/general-practitioner-list.component.ts","./src/app/admin-dashboard/practitioner-list/general-practitioner-list.component.html","./src/app/admin-dashboard/practitioner-list/general-practitioner-update.component.ts","./src/app/admin-dashboard/practitioner-list/general-practitioner-update.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/appointment/appointment.component.ts","./src/app/appointment/appointment.component.html","./src/app/appointment/event-utils.ts","./src/app/appointment/select-practitioner.component.ts","./src/app/appointment/select-practitioner.component.html","./src/app/appointment/update-practitioner.component.ts","./src/app/appointment/update-practitioner.component.html","./src/app/appointment/worktime/worktime.component.ts","./src/app/appointment/worktime/worktime.component.html","./src/app/auth/login.component.ts","./src/app/auth/login.component.html","./src/app/auth/registration.component.ts","./src/app/auth/registration.component.html","./src/app/client-list/client-list.component.ts","./src/app/client-list/client-list.component.html","./src/app/common-questions/common-questions.component.ts","./src/app/common-questions/common-questions.component.html","./src/app/dto/forgot-password-dto.ts","./src/app/dto/holidays-dto.ts","./src/app/dto/jwt-dto.ts","./src/app/dto/login-user.ts","./src/app/dto/new-user.ts","./src/app/dto/update-password-dto.ts","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/guard/login.guard.ts","./src/app/guard/user-guard.service.ts","./src/app/index/index.component.ts","./src/app/index/index.component.html","./src/app/interceptor/user-interceptor.service.ts","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/app/model/appointment.ts","./src/app/model/user.ts","./src/app/model/worktime.ts","./src/app/profile/password-update.component.ts","./src/app/profile/password-update.component.html","./src/app/profile/profile-update.component.ts","./src/app/profile/profile-update.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/service/admin-dashboard.service.ts","./src/app/service/appointment.service.ts","./src/app/service/auth.service.ts","./src/app/service/patient.service.ts","./src/app/service/practitioner-dashboard.service.ts","./src/app/service/token.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\nexport class ActivationComponent implements OnInit {\n\n\n    constructor(\n      private activatedRoute: ActivatedRoute,\n      private authService: AuthService,\n      private router: Router,\n      private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.activation();\n  }\n\n  activation() {\n    this.authService.activation(this.activatedRoute.snapshot.url[1].path).subscribe(\n      data => {\n        this.toastr.success('Sikeres aktiváció!', 'OK', {\n          timeOut: 3000, positionClass: 'toast-top-center'\n        });\n        this.router.navigate(['/login']);\n      },\n      error => {\n      }\n    );\n  }\n\n}\n","<app-main-nav></app-main-nav>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-patient-details',\r\n  templateUrl: './patient-details.component.html',\r\n  styleUrls: ['./patient-details.component.css']\r\n})\r\nexport class PatientDetailsComponent implements OnInit {\r\n\r\n  id: number;\r\n  patient: User;\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private adminService: AdminDashboardService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n     this.id = this.route.snapshot.params['id'];\r\n\r\n    this.adminService.getPatientById(this.id)\r\n      .subscribe(\r\n        data => {\r\n          this.patient = data;\r\n        },\r\n        err => {\r\n          this.errorMessage = err.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n\r\n  list(){\r\n    this.router.navigate(['patients']);\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <h2>Páciens részletek</h2>\r\n\r\n  <hr/>\r\n  <div *ngIf=\"patient\">\r\n    <div>\r\n      <label><b>Név: </b></label> {{patient.patient.name}}\r\n    </div>\r\n    <div>\r\n      <label><b>Felhasználónév: </b></label> {{patient.username}}\r\n    </div>\r\n    <div>\r\n      <label><b>Email: </b></label> {{patient.patient.email}}\r\n    </div>\r\n    <div>\r\n      <label><b>Lakcím: </b></label> {{patient.patient.address}}\r\n    </div>\r\n    <div>\r\n      <label><b>Születési dátum: </b></label> {{patient.patient.dateOfBorn}}\r\n    </div>\r\n    <div>\r\n      <label><b>Telefonszám: </b></label> {{patient.patient.phoneNumber}}\r\n    </div>\r\n  </div>\r\n\r\n  <br>\r\n  <br>\r\n  <button (click)=\"list()\" class=\"btn btn-primary\">Vissza a páciens listához</button><br>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-list',\r\n  templateUrl: './patient-list.component.html',\r\n  styleUrls: ['./patient-list.component.css']\r\n})\r\nexport class PatientListComponent implements OnInit {\r\n\r\n  patients: Array<User> = [];\r\n  errorMessage: string;\r\n  name: any;\r\n  totalRecords: number;\r\n  page:number = 1;\r\n\r\n  constructor(private adminService: AdminDashboardService, private router: Router,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.getPatients();\r\n  }\r\n\r\n  deletePatient(id: number) {\r\n    this.adminService.deletePatient(id)\r\n      .subscribe(\r\n        data => {\r\n          this.toastr.success('Páciens törölve!', 'OK', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n          this.getPatients();\r\n        },\r\n        err => {\r\n          this.errorMessage = err.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getPatients() {\r\n    this.adminService.getAllPatient().subscribe(\r\n      response => {\r\n        this.patients = response;\r\n      },\r\n      error => {\r\n        // TODO: Error message\r\n      }\r\n    );\r\n  }\r\n\r\n  getPatientDetails(id: number){\r\n    this.router.navigate(['patients/details', id]);\r\n  }\r\n\r\n  updatePatient(id: number){\r\n    this.router.navigate(['patients/update', id]);\r\n  }\r\n\r\n  updateToPractitioner(id: number){\r\n    this.adminService.upgradeToPractitioner(id).subscribe(\r\n      response => {\r\n        this.toastr.success(\"Orvos rang kiosztva\", 'OK', {\r\n          timeOut: 3000, positionClass: 'toast-top-center'\r\n        });\r\n      },\r\n      error => {\r\n        this.toastr.error(error.error.message, 'Hiba', {\r\n          timeOut: 3000, positionClass: 'toast-top-center'\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  search(){\r\n    if(this.name == \"\"){\r\n      this.ngOnInit();\r\n    } else{\r\n      this.patients = this.patients.filter(res=>{\r\n        return res.patient.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\r\n      })\r\n    }\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <div class=\"panel panel-primary\">\r\n    <div class=\"panel-heading\">\r\n      <h2>Páciens lista</h2>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n      <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"name\" (ngModelChange)=\"search()\" placeholder=\"Írd be a páciens nevét\">\r\n      <table class=\"table table-striped table-responsive-md\">\r\n        <thead>\r\n          <tr>\r\n            <th>Név</th>\r\n            <th>Felhasználónév</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let patient of patients | paginate: { id: 'listing_pagination',\r\n          itemsPerPage: 10,\r\n          currentPage: page,\r\n          totalItems: totalRecords }\">\r\n            <td>{{patient.patient.name}}</td>\r\n            <td>{{patient.username}}</td>\r\n            <td>{{patient.patient.email}}</td>\r\n            <td style=\"display: flex;\"><button (click)=\"getPatientDetails(patient.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Részletek</button>\r\n            <button (click)=\"updatePatient(patient.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Módosítás</button>\r\n            <button (click)=\"updateToPractitioner(patient.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Orvossá alakítás</button>\r\n            <button (click)=\"deletePatient(patient.id)\" class=\"btn btn-danger\">Törlés</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <pagination-controls  id=\"listing_pagination\" maxSize=\"5\"\r\n        directionLinks=\"true\"\r\n        (pageChange)=\"page = $event\"></pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-update',\r\n  templateUrl: './patient-update.component.html',\r\n  styleUrls: ['./patient-update.component.css']\r\n})\r\nexport class PatientUpdateComponent implements OnInit {\r\n\r\n  id: number;\r\n  patient: User;\r\n\r\n  name : string;\r\n  username : string;\r\n  email : string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n\r\n  minDate = new Date(1900,1,1);\r\n  maxDate = new Date();\r\n\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private adminService: AdminDashboardService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    this.adminService.getPatientById(this.id)\r\n      .subscribe(\r\n        data => {\r\n          this.patient = data;\r\n          this.name = this.patient.patient.name;\r\n          this.username = this.patient.username;\r\n          this.email = this.patient.patient.email;\r\n          this.address = this.patient.patient.address;\r\n          this.dateOfBorn = this.patient.patient.dateOfBorn;\r\n          this.phoneNumber = this.patient.patient.phoneNumber;\r\n      }, error => {\r\n\r\n      });\r\n  }\r\n\r\n  updatePatient() {\r\n    this.patient.patient.name = this.name;\r\n    this.patient.username = this.username;\r\n    this.patient.patient.email = this.email;\r\n    this.patient.patient.address = this.address;\r\n    this.patient.patient.dateOfBorn = this.dateOfBorn;\r\n    this.patient.patient.phoneNumber = this.phoneNumber;\r\n\r\n    this.adminService.updatePatient(this.id, this.patient)\r\n      .subscribe(data => {\r\n        this.toastr.success('Sikeres módosítás!', 'OK', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        this.gotoList();\r\n      }, err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.updatePatient();\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/patients']);\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n  <div class=\"container d-flex justify-content-center\">\r\n\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <h4><b>Páciens módosítása</b></h4>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Teljes név</mat-label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              matInput\r\n              maxlength=\"40\"\r\n              #nameError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"nameError.invalid && nameError.touched\"\r\n            >\r\n              <div *ngIf=\"nameError.errors.required\">\r\n                Név megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"nameError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Név megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              [(ngModel)]=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              matInput\r\n              #emailError=\"ngModel\"\r\n              maxlength=\"40\"\r\n              pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"emailError.invalid && emailError.touched\"\r\n            >\r\n              <div *ngIf=\"emailError.errors.required\">\r\n                Email megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.pattern\">\r\n                Meg kell felelnie a mintának.\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Email cím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <label for=\"dateOfBorn\">Születési dátum:</label>\r\n            <input\r\n              name=\"dateOfBorn\"\r\n              id=\"dateOfBorn\"\r\n              matInput\r\n              [matDatepicker]=\"myDatePicker\"\r\n              [(ngModel)]=\"dateOfBorn\"\r\n              [min]=\"minDate\"\r\n              [max]=\"maxDate\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              [for]=\"myDatePicker\"\r\n              matSuffix\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatePicker></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Lakcím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"address\"\r\n              name=\"address\"\r\n              id=\"address\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              #addressError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"addressError.invalid && addressError.touched\"\r\n            >\r\n              <div *ngIf=\"addressError.errors.required\">\r\n                Lakcím megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"addressError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Lakcím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Telefonszám</mat-label>\r\n            <input\r\n              [(ngModel)]=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              matInput\r\n              maxlength=\"20\"\r\n              #phoneNumberError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"phoneNumberError.invalid && phoneNumberError.touched\"\r\n            >\r\n              <div *ngIf=\"phoneNumberError.errors.required\">\r\n                Telefonszám megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"phoneNumberError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Telefonszám megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n              <i class=\"far fa-save\"></i> Módosítás\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-general-practitioner-details',\r\n  templateUrl: './general-practitioner-details.component.html',\r\n  styleUrls: ['./general-practitioner-details.component.css']\r\n})\r\nexport class GeneralPractitionerDetailsComponent implements OnInit {\r\n\r\n  id: number;\r\n  practitioner: User;\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private adminService: AdminDashboardService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    this.adminService.getPatientById(this.id)\r\n      .subscribe(\r\n        data => {\r\n          this.practitioner = data;\r\n        },\r\n        err => {\r\n          this.errorMessage = err.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n\r\n  list(){\r\n    this.router.navigate(['practitioners']);\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <h2>Háziorvos részletek</h2>\r\n\r\n  <hr/>\r\n  <div *ngIf=\"practitioner\">\r\n    <div>\r\n      <label><b>Név: </b></label> {{practitioner.patient.name}}\r\n    </div>\r\n    <div>\r\n      <label><b>Felhasználónév: </b></label> {{practitioner.username}}\r\n    </div>\r\n    <div>\r\n      <label><b>Email: </b></label> {{practitioner.patient.email}}\r\n    </div>\r\n    <div>\r\n      <label><b>Lakcím: </b></label> {{practitioner.patient.address}}\r\n    </div>\r\n    <div>\r\n      <label><b>Születési dátum: </b></label> {{practitioner.patient.dateOfBorn}}\r\n    </div>\r\n    <div>\r\n      <label><b>Telefonszám: </b></label> {{practitioner.patient.phoneNumber}}\r\n    </div>\r\n  </div>\r\n\r\n  <br>\r\n  <br>\r\n  <button (click)=\"list()\" class=\"btn btn-primary\">Vissza a háziorvos listához</button><br>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-general-practitioner-list',\r\n  templateUrl: './general-practitioner-list.component.html',\r\n  styleUrls: ['./general-practitioner-list.component.css']\r\n})\r\nexport class GeneralPractitionerListComponent implements OnInit {\r\n\r\n  practitioners: Array<User> = [];\r\n  errorMessage: string;\r\n  name: any;\r\n  totalRecords: number;\r\n  page:number = 1;\r\n\r\n  constructor(private adminService: AdminDashboardService, private router: Router,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.getPractitioners();\r\n  }\r\n\r\n  getPractitioners() {\r\n    this.adminService.getAllPractitioner().subscribe(\r\n      response => {\r\n        this.practitioners = response;\r\n      },\r\n      error => {\r\n      }\r\n    );\r\n  }\r\n\r\n  downgradeToPatient(id: number){\r\n    this.adminService.downgradeToPatient(id).subscribe(\r\n      data => {\r\n        this.toastr.success('Ez a felhasználó mostantól nem orvos!', 'OK', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        window.location.reload();\r\n      },\r\n      error => {\r\n        this.errorMessage = error.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n      }\r\n    )\r\n  }\r\n\r\n  getPractitionerDetails(id: number){\r\n    this.router.navigate(['practitioners/details', id]);\r\n  }\r\n\r\n  updatePractitioner(id: number){\r\n    this.router.navigate(['practitioners/update', id]);\r\n  }\r\n\r\n  search(){\r\n    if(this.name == \"\"){\r\n      this.ngOnInit();\r\n    } else{\r\n      this.practitioners = this.practitioners.filter(res=>{\r\n        return res.patient.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <div class=\"panel panel-primary\">\r\n    <div class=\"panel-heading\">\r\n      <h2>Praktícionáló lista</h2>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n      <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"name\" (ngModelChange)=\"search()\" placeholder=\"Írd be az orvos nevét\">\r\n      <table class=\"table table-striped table-responsive-md\">\r\n        <thead>\r\n          <tr>\r\n            <th>Név</th>\r\n            <th>Felhasználónév</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let practitioner of practitioners | paginate: { id: 'listing_pagination',\r\n          itemsPerPage: 10,\r\n          currentPage: page,\r\n          totalItems: totalRecords }\">\r\n            <td>{{practitioner.patient.name}}</td>\r\n            <td>{{practitioner.username}}</td>\r\n            <td>{{practitioner.patient.email}}</td>\r\n            <td style=\"display: flex;\"><button (click)=\"getPractitionerDetails(practitioner.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Részletek</button>\r\n            <button (click)=\"updatePractitioner(practitioner.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Módosítás</button>\r\n            <button (click)=\"downgradeToPatient(practitioner.id)\" class=\"btn btn-info\" style=\"margin-right: 10px\">Nem orvos</button>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <pagination-controls  id=\"listing_pagination\" maxSize=\"5\"\r\n        directionLinks=\"true\"\r\n        (pageChange)=\"page = $event\"></pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/model/user';\r\nimport { AdminDashboardService } from 'src/app/service/admin-dashboard.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-general-practitioner-update',\r\n  templateUrl: './general-practitioner-update.component.html',\r\n  styleUrls: ['./general-practitioner-update.component.css']\r\n})\r\nexport class GeneralPractitionerUpdateComponent implements OnInit {\r\n\r\n  id: number;\r\n  practitioner: User;\r\n\r\n  name : string;\r\n  username : string;\r\n  email : string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n\r\n  minDate = new Date(1900,1,1);\r\n  maxDate = new Date();\r\n\r\n\r\n  errorMessage: string;\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private adminService: AdminDashboardService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    this.adminService.getPatientById(this.id)\r\n      .subscribe(data => {\r\n        this.practitioner = data;\r\n        this.name = this.practitioner.patient.name;\r\n        this.username = this.practitioner.username;\r\n        this.email = this.practitioner.patient.email;\r\n        this.address = this.practitioner.patient.address;\r\n        this.dateOfBorn = this.practitioner.patient.dateOfBorn;\r\n        this.phoneNumber = this.practitioner.patient.phoneNumber;\r\n      }, error => {\r\n\r\n      });\r\n  }\r\n\r\n  updatePractitioner() {\r\n    this.practitioner.patient.name = this.name;\r\n    this.practitioner.username = this.username;\r\n    this.practitioner.patient.email = this.email;\r\n    this.practitioner.patient.address = this.address;\r\n    this.practitioner.patient.dateOfBorn = this.dateOfBorn;\r\n    this.practitioner.patient.phoneNumber = this.phoneNumber;\r\n\r\n    this.adminService.updatePatient(this.id, this.practitioner)\r\n      .subscribe(data => {\r\n        this.toastr.success('Sikeres módosítás!', 'OK', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        this.gotoList();\r\n      }, err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.updatePractitioner();\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/practitioners']);\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n  <div class=\"container d-flex justify-content-center\">\r\n\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <h4><b>Praktícionáló módosítása</b></h4>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Teljes név</mat-label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              matInput\r\n              maxlength=\"40\"\r\n              #nameError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"nameError.invalid && nameError.touched\"\r\n            >\r\n              <div *ngIf=\"nameError.errors.required\">\r\n                Név megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"nameError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Név megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              [(ngModel)]=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              matInput\r\n              #emailError=\"ngModel\"\r\n              maxlength=\"40\"\r\n              pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"emailError.invalid && emailError.touched\"\r\n            >\r\n              <div *ngIf=\"emailError.errors.required\">\r\n                Email megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.pattern\">\r\n                Meg kell felelnie a mintának.\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Email cím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <label for=\"dateOfBorn\">Születési dátum:</label>\r\n            <input\r\n              name=\"dateOfBorn\"\r\n              id=\"dateOfBorn\"\r\n              matInput\r\n              [matDatepicker]=\"myDatePicker\"\r\n              [(ngModel)]=\"dateOfBorn\"\r\n              [min]=\"minDate\"\r\n              [max]=\"maxDate\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              [for]=\"myDatePicker\"\r\n              matSuffix\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatePicker></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Lakcím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"address\"\r\n              name=\"address\"\r\n              id=\"address\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              #addressError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"addressError.invalid && addressError.touched\"\r\n            >\r\n              <div *ngIf=\"addressError.errors.required\">\r\n                Lakcím megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"addressError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Lakcím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Telefonszám</mat-label>\r\n            <input\r\n              [(ngModel)]=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              matInput\r\n              maxlength=\"20\"\r\n              #phoneNumberError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"phoneNumberError.invalid && phoneNumberError.touched\"\r\n            >\r\n              <div *ngIf=\"phoneNumberError.errors.required\">\r\n                Telefonszám megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"phoneNumberError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Telefonszám megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n              <i class=\"far fa-save\"></i> Módosítás\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { RegistrationComponent } from './auth/registration.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { ProdGuardService } from './guard/user-guard.service';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileUpdateComponent } from './profile/profile-update.component';\r\nimport { PasswordUpdateComponent } from './profile/password-update.component';\r\nimport { SelectPractitionerComponent } from './appointment/select-practitioner.component';\r\nimport { LoginGuard } from './guard/login.guard';\r\nimport { WorktimeComponent } from './appointment/worktime/worktime.component';\r\nimport { PatientDetailsComponent } from './admin-dashboard/patient-list/patient-details.component';\r\nimport { PatientListComponent } from './admin-dashboard/patient-list/patient-list.component';\r\nimport { PatientUpdateComponent } from './admin-dashboard/patient-list/patient-update.component';\r\nimport { GeneralPractitionerDetailsComponent } from './admin-dashboard/practitioner-list/general-practitioner-details.component';\r\nimport { GeneralPractitionerListComponent } from './admin-dashboard/practitioner-list/general-practitioner-list.component';\r\nimport { GeneralPractitionerUpdateComponent } from './admin-dashboard/practitioner-list/general-practitioner-update.component';\r\nimport { AppointmentComponent } from './appointment/appointment.component';\r\nimport { UpdatePractitionerComponent } from './appointment/update-practitioner.component';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ActivationComponent } from './activation/activation.component';\r\nimport { CommonQuestionsComponent } from './common-questions/common-questions.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: IndexComponent},\r\n  {path: 'login', component: LoginComponent, canActivate: [LoginGuard]},\r\n  {path: 'registration', component: RegistrationComponent, canActivate: [LoginGuard]},\r\n  {path: 'activation/:code', component: ActivationComponent, canActivate: [LoginGuard]},\r\n  {path: 'forgot-password', component: ForgotPasswordComponent, canActivate: [LoginGuard]},\r\n  {path: 'reset-password/:code', component: ResetPasswordComponent, canActivate: [LoginGuard]},\r\n  {path: 'profile', component: ProfileComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'profile/update', component: ProfileUpdateComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'profile/password-update', component: PasswordUpdateComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'appointment/reservation', component: SelectPractitionerComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'practitioners', component: GeneralPractitionerListComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'practitioner-dashboard', component: ClientListComponent, canActivate: [ProdGuardService], data: {expectedRole: ['practitioner']}},\r\n  {path: 'practitioners/details/:id', component: GeneralPractitionerDetailsComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'practitioners/update/:id', component: GeneralPractitionerUpdateComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'patients', component: PatientListComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'patients/details/:id', component: PatientDetailsComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'patients/update/:id', component: PatientUpdateComponent, canActivate: [ProdGuardService], data: {expectedRole: ['admin']}},\r\n  {path: 'appointment/reservation', component: AppointmentComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'appointment/update-practitioner', component: UpdatePractitionerComponent, canActivate: [ProdGuardService], data: {expectedRole: ['patient','practitioner']}},\r\n  {path: 'appointment/worktimes', component: WorktimeComponent, canActivate: [ProdGuardService], data: {expectedRole: ['practitioner']}},\r\n  {path: 'frequently-asked-questions', component: CommonQuestionsComponent},\r\n  {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'szakdolgozat-frontend';\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { RegistrationComponent } from './auth/registration.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { MainNavComponent } from './main-nav/main-nav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { PatientDetailsComponent } from './admin-dashboard/patient-list/patient-details.component';\r\nimport { PatientListComponent } from './admin-dashboard/patient-list/patient-list.component';\r\nimport { PatientUpdateComponent } from './admin-dashboard/patient-list/patient-update.component';\r\nimport { GeneralPractitionerDetailsComponent } from './admin-dashboard/practitioner-list/general-practitioner-details.component';\r\nimport { GeneralPractitionerListComponent } from './admin-dashboard/practitioner-list/general-practitioner-list.component';\r\nimport { GeneralPractitionerUpdateComponent } from './admin-dashboard/practitioner-list/general-practitioner-update.component';\r\nimport { AppointmentComponent } from './appointment/appointment.component';\r\nimport { SelectPractitionerComponent } from './appointment/select-practitioner.component';\r\nimport { UpdatePractitionerComponent } from './appointment/update-practitioner.component';\r\nimport { WorktimeComponent } from './appointment/worktime/worktime.component';\r\nimport { interceptorProvider } from './interceptor/user-interceptor.service';\r\nimport { PasswordUpdateComponent } from './profile/password-update.component';\r\nimport { ProfileUpdateComponent } from './profile/profile-update.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ActivationComponent } from './activation/activation.component';\r\nimport { CommonQuestionsComponent } from './common-questions/common-questions.component';\r\n\r\nFullCalendarModule.registerPlugins([\r\n  dayGridPlugin,\r\n  timeGridPlugin,\r\n  interactionPlugin\r\n])\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    IndexComponent,\r\n    MainNavComponent,\r\n    ProfileComponent,\r\n    GeneralPractitionerListComponent,\r\n    GeneralPractitionerDetailsComponent,\r\n    GeneralPractitionerUpdateComponent,\r\n    ProfileUpdateComponent,\r\n    PasswordUpdateComponent,\r\n    SelectPractitionerComponent,\r\n    PatientListComponent,\r\n    PatientDetailsComponent,\r\n    PatientUpdateComponent,\r\n    AppointmentComponent,\r\n    UpdatePractitionerComponent,\r\n    WorktimeComponent,\r\n    ClientListComponent,\r\n    ForgotPasswordComponent,\r\n    ResetPasswordComponent,\r\n    ActivationComponent,\r\n    CommonQuestionsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ToastrModule.forRoot(),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    LayoutModule,\r\n    MatSidenavModule,\r\n    MatTableModule,\r\n    NgxPaginationModule,\r\n    FullCalendarModule,\r\n    MatExpansionModule\r\n  ],\r\n  providers: [\r\n    interceptorProvider,\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n    {provide: MAT_DATE_LOCALE, useValue: 'hu'}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { CalendarOptions, DateSelectArg, EventClickArg, EventApi } from '@fullcalendar/angular';\r\nimport { EventInput } from '@fullcalendar/core'\r\nimport huLocale from '@fullcalendar/core/locales/hu';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { InstructionDto } from '../dto/instruction-dto';\r\nimport { Appointment } from '../model/appointment';\r\nimport { User } from '../model/user';\r\nimport { AppointmentService } from '../service/appointment.service';\r\nimport { PatientService } from '../service/patient.service';\r\nimport { TokenService } from '../service/token.service';\r\nimport { createEventId, HOLIDAYS } from './event-utils';\r\n\r\n@Component({\r\n  selector: 'app-appointment',\r\n  templateUrl: './appointment.component.html',\r\n  styleUrls: ['./appointment.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppointmentComponent {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n  errorMessage: string;\r\n  dayNumber: number = null;\r\n  calendarEvents: EventInput[] = [];\r\n  customBusinessHours: EventInput[] = [];\r\n  myCalendarEventForInstruction?: InstructionDto[] = [];\r\n  wantToWorkOnHolidays: boolean;\r\n\r\n  constructor(private service : AppointmentService, private toastr: ToastrService,\r\n    private tokenService: TokenService, private patientService: PatientService){ }\r\n\r\n  ngOnInit(){\r\n    var day = new Date();\r\n    this.dayNumber = day.getDay();\r\n    this.calendarOptions.firstDay = this.dayNumber;\r\n    this.getProfile();\r\n  }\r\n\r\n  calendarVisible = true;\r\n  calendarOptions: CalendarOptions = {\r\n    locale: huLocale,\r\n    allDaySlot: false,\r\n    headerToolbar: {\r\n      left: 'prev,next',\r\n      center: 'title',\r\n      right: 'today'\r\n    },\r\n    forceEventDuration: true,\r\n    slotDuration: '00:15',\r\n    slotLabelInterval: 15,\r\n    slotLabelFormat: {\r\n      hour: 'numeric',\r\n      minute: '2-digit',\r\n      omitZeroMinute: false,\r\n      meridiem: 'short'\r\n    },\r\n    slotMinTime: '6:00',\r\n    slotMaxTime: '20:00',\r\n\r\n    businessHours: [],\r\n\r\n    selectConstraint:[],\r\n\r\n    validRange: {\r\n      start: Date.now(),\r\n      end: Date.now() + 1000*60*60*24*31 //+1 year\r\n    },\r\n    events: this.calendarEvents,\r\n    initialView: 'timeGridWeek',\r\n    firstDay: this.dayNumber,\r\n    weekends: false,\r\n    editable: false,\r\n    defaultTimedEventDuration:'00:15',\r\n    selectable: true,\r\n    selectMirror: false,\r\n    dayMaxEvents: true,\r\n    select: this.handleDateSelect.bind(this),\r\n    eventClick: this.handleEventClick.bind(this),\r\n    eventsSet: this.handleEvents.bind(this),\r\n\r\n    /* you can update a remote database when these fire:\r\n    eventAdd:\r\n    eventChange:\r\n    eventRemove:\r\n    */\r\n  };\r\n\r\n  currentEvents: EventApi[] = [];\r\n\r\n  getProfile(){\r\n\r\n    this.profileData = new User();\r\n\r\n    this.patientService.getProfileDetails(this.username)\r\n      .subscribe(\r\n        data => {\r\n          this.profileData = data;\r\n          this.doesYourDoctorWorkOnHolidays();\r\n        },\r\n        err => {\r\n          this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n  }\r\n\r\n  doesYourDoctorWorkOnHolidays(){\r\n    this.service.getWorksOnHolidays(this.username).subscribe(\r\n      data => {\r\n        this.wantToWorkOnHolidays = data.worksOnHoliday;\r\n        this.getYourDoctorBusinessHours();\r\n      },\r\n      error => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getYourDoctorBusinessHours(){\r\n    this.service.myPractitionerWorkingTime(this.username).subscribe(\r\n      data => {\r\n        data.forEach(element => {\r\n          this.customBusinessHours = this.customBusinessHours.concat({\r\n            daysOfWeek: [element.day],\r\n            startTime: element.fromTime,\r\n            endTime: element.toTime,\r\n            },)\r\n        })\r\n        this.calendarOptions.businessHours = this.customBusinessHours;\r\n        this.calendarOptions.selectConstraint = this.customBusinessHours;\r\n        this.showMyReservations();\r\n      })\r\n  }\r\n\r\n  showMyReservations(){\r\n    this.service.getAppointments(this.username).subscribe(\r\n      data => {\r\n        data.forEach(element => {\r\n          this.calendarEvents = this.calendarEvents.concat({\r\n              id: ''+element.id,\r\n              title: element.message,\r\n              start:element.time\r\n            },)\r\n            this.showAppointmentsForInstruction();\r\n        })\r\n        this.calendarOptions.events = this.calendarEvents;\r\n        this.getOthersReservations();\r\n      })\r\n  }\r\n\r\n  showAppointmentsForInstruction(){\r\n    this.service.showAppointmentsForInstruction(this.username).subscribe(\r\n      data => {\r\n        this.myCalendarEventForInstruction = data;\r\n      },\r\n      error => {\r\n      }\r\n    );\r\n  }\r\n\r\n  getOthersReservations(){\r\n    this.service.getOthersAppointments(this.username).subscribe(\r\n       data => {\r\n\r\n         data.forEach(element => {\r\n\r\n           this.calendarEvents = this.calendarEvents.concat({\r\n               id: ''+element.id,\r\n               start: element.time,\r\n               backgroundColor: '#dddddd',\r\n               textColor: '#000000',\r\n               borderColor: '#dddddd',\r\n               color: '#dddddd',\r\n               className: 'disabled'\r\n             },);\r\n         })\r\n\r\n\r\n        if(this.wantToWorkOnHolidays == true)\r\n         HOLIDAYS.forEach(element => {\r\n          this.calendarEvents = this.calendarEvents.concat({\r\n            id: createEventId()+1111,\r\n            start: element.start,\r\n            end: element.end,\r\n            backgroundColor: '#dddddd',\r\n            textColor: '#000000',\r\n            borderColor: '#dddddd',\r\n            color: '#dddddd',\r\n            className: 'disabled'\r\n          })\r\n        })\r\n        this.calendarOptions.events = this.calendarEvents;\r\n\r\n       })\r\n\r\n\r\n     }\r\n\r\n  handleDateSelect(selectInfo: DateSelectArg) {\r\n    const calendarApi = selectInfo.view.calendar;\r\n    calendarApi.unselect();\r\n\r\n    if(confirm(\"Biztosan foglalsz?\")){\r\n    const title = prompt('Ha szeretnéd, írd le a problémádat pár szóban');\r\n    if (title) {\r\n        calendarApi.addEvent({\r\n        id: createEventId()+'f',\r\n        title,\r\n        start: selectInfo.startStr\r\n      });\r\n    }\r\n    else {\r\n      calendarApi.addEvent({\r\n        id: createEventId()+'f',\r\n        title: this.profileData.patient.name,\r\n        start: selectInfo.startStr\r\n      });\r\n    }\r\n\r\n      this.service.saveAppointment(this.username, new Appointment(null,title?title:this.profileData.patient.name,selectInfo.startStr)).subscribe(\r\n        data => {\r\n          this.toastr.success('Sikeres időpontfoglalás!', 'OK', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n          window.location.reload();\r\n        },\r\n        err => {\r\n          this.errorMessage = err.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n          window.location.reload();\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  handleEventClick(clickInfo: EventClickArg) {\r\n    if(clickInfo.event.backgroundColor != '#dddddd'){\r\n    if (confirm(`Biztosan törölöd a foglalásod? '${clickInfo.event.start}'`)) {\r\n      this.service.deleteAppointment(clickInfo.event.id).subscribe(\r\n        data => {\r\n          this.toastr.success('Sikeresen törölted az időpontot!', 'OK', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        },\r\n        err => {\r\n          this.toastr.error('Az időpont törlése nem sikerült!', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n      );\r\n      clickInfo.event.remove();\r\n    }\r\n  }\r\n  }\r\n\r\n  handleEvents(events: EventApi[]) {\r\n    this.currentEvents = events;\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n<div class='demo-app'>\r\n  <div class='demo-app-sidebar'>\r\n    <div class='demo-app-sidebar-section'>\r\n      <h2>Instrukciók\r\n      </h2>\r\n      <ul>\r\n        <li>Az általad kiválasztott praktícionáló időpontjait láthatod<br>\r\n        <br><i>-A fehér színnel jelzett időpontok elérhetők</i>\r\n        <br><i>-A szürke színnel jelzett időpontok foglaltak</i>\r\n        <br><i>-A sárga színnel jelzett oszlop a mai napot jelzi</i>\r\n        </li>\r\n        <li>Válassz ki egy olyan időpontot, amikor menni szeretnél</li>\r\n        <li>Kattints egy foglalásra a foglalás törléséhez</li>\r\n      </ul>\r\n    </div>\r\n    <div class='demo-app-sidebar-section'>\r\n      <h2>Lefoglalt időpontok:</h2>\r\n      <ul>\r\n        <li *ngFor='let event of myCalendarEventForInstruction'>\r\n          <i>{{event.practitionerName}}</i>\r\n          <br>\r\n          <b>{{event.time | date: 'yyyy.MM.dd hh:mm'}}</b>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div class='demo-app-main'>\r\n    <full-calendar\r\n      *ngIf='calendarVisible'\r\n      [options]='calendarOptions'\r\n    ></full-calendar>\r\n  </div>\r\n\r\n</div>\r\n</div>\r\n","import { EventInput } from '@fullcalendar/angular';\r\n\r\nlet eventGuid = 0;\r\nvar dateNow = new Date;\r\n\r\nexport const HOLIDAYS: EventInput[] = [\r\n  {\r\n    start: dateNow.getFullYear().toString()+'01-01T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'01-01T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'03-15T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'03-15T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'05-01T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'05-01T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'08-20T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'08-20T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'10-23T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'10-23T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'11-01T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'11-01T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'12-24T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'12-24T24:00:00',\r\n  },\r\n  {\r\n    start: dateNow.getFullYear().toString()+'12-25T00:00:00',\r\n    end: dateNow.getFullYear().toString()+'12-25T24:00:00',\r\n  },\r\n];\r\n\r\nexport function createEventId() {\r\n  return String(eventGuid++);\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../model/user';\r\nimport { AppointmentService } from '../service/appointment.service';\r\nimport { PatientService } from '../service/patient.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-select-practitioner',\r\n  templateUrl: './select-practitioner.component.html',\r\n  styleUrls: ['./select-practitioner.component.css']\r\n})\r\nexport class SelectPractitionerComponent implements OnInit {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n\r\n  practitioners: Array<User> = [];\r\n  errorMessage: string;\r\n\r\n  constructor(private patientService: PatientService, private tokenService: TokenService,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile(){\r\n    this.profileData = new User();\r\n\r\n    this.patientService.getProfileDetails(this.username)\r\n      .subscribe(\r\n        data => {\r\n          this.profileData = data;\r\n        },\r\n        err => {\r\n          this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n  }\r\n}\r\n","<div *ngIf=\"!profileData.patient?.practitionerId; else schedule\">\r\n  <app-update-practitioner></app-update-practitioner>\r\n</div>\r\n\r\n<ng-template #schedule>\r\n  <app-appointment></app-appointment>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../model/user';\r\nimport { AppointmentService } from '../service/appointment.service';\r\nimport { PatientService } from '../service/patient.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-update-practitioner',\r\n  templateUrl: './update-practitioner.component.html',\r\n  styleUrls: ['./update-practitioner.component.css']\r\n})\r\nexport class UpdatePractitionerComponent implements OnInit {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n  practitioners: Array<User> = [];\r\n  errorMessage: string;\r\n\r\n  constructor(private appointmentService: AppointmentService, private toastr: ToastrService,\r\n                  private tokenService: TokenService, private patientService: PatientService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n    this.getPractitioners();\r\n  }\r\n\r\n  getProfile(){\r\n    this.profileData = new User();\r\n\r\n    this.patientService.getProfileDetails(this.username)\r\n      .subscribe(\r\n        data => {\r\n          this.profileData = data;\r\n        },\r\n        err => {\r\n          this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n\r\n      );\r\n  }\r\n\r\n  getPractitioners() {\r\n    this.appointmentService.getAllPractitionerExceptMe(this.username).subscribe(\r\n      response => {\r\n        this.practitioners = response;\r\n      },\r\n      err => {\r\n        this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  selectedPractitioner(practitionerId: number){\r\n    this.appointmentService.updatePractitioner(this.username, practitionerId)\r\n    .subscribe(data => {\r\n      window.location.reload();\r\n    }, err => {\r\n      this.errorMessage = err.error.message;\r\n      this.toastr.error(this.errorMessage, 'Hiba!', {\r\n        timeOut: 3000,  positionClass: 'toast-top-center'\r\n      });\r\n    }\r\n  );\r\n  this.toastr.success('Kiválasztottál egy orvost!', 'OK', {\r\n    timeOut: 3000,  positionClass: 'toast-top-center',\r\n  });\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around stretch\" style=\"margin: auto;\" >\r\n<mat-card class=\"practitioner-card col-lg-3\" *ngFor=\"let practitioner of practitioners\">\r\n  <mat-card-header>\r\n    <mat-card-title id=\"practitioner-name\"><b>{{practitioner.patient.name}}</b></mat-card-title>\r\n    <mat-card-subtitle>{{practitioner.practitioner.specialization}}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img mat-card-image src=\"https://image.freepik.com/free-vector/doctor-character-background_1270-84.jpg\">\r\n  <mat-card-content>\r\n    <div>\r\n    <mat-label><b>Munkahelyi cím:</b></mat-label><div>{{practitioner.practitioner.workingAddress}}</div>\r\n    <hr>\r\n    <div style=\"display: block;\">\r\n      <mat-label><b>Munkaidő:</b></mat-label>\r\n      <div *ngFor=\"let worktime of practitioner.practitioner.worktimes\">\r\n        <div *ngIf=\"worktime.fromTime != '0:00' && worktime.toTime != '0:00'\" style=\"position: relative;\">\r\n          <div *ngIf=\"worktime.day == 1\">Hétfő: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n          <div *ngIf=\"worktime.day == 2\">Kedd: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n          <div *ngIf=\"worktime.day == 3\">Szerda: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n          <div *ngIf=\"worktime.day == 4\">Csütörtök: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n          <div *ngIf=\"worktime.day == 5\">Péntek: {{worktime.fromTime}}-{{worktime.toTime}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </mat-card-content>\r\n  <mat-card-actions  *ngIf=\"profileData.patient?.practitionerId; else inactive\">\r\n    <button *ngIf=\"profileData.patient.practitionerId == practitioner.practitioner?.id; else inactive\"\r\n      mat-raised-button color=\"warn\" (click)=\"selectedPractitioner(practitioner.practitioner.id)\">Aktív orvos\r\n    </button>\r\n  </mat-card-actions>\r\n  <ng-template #inactive>\r\n    <mat-card-actions>\r\n        <button #inactive mat-raised-button color=\"primary\" (click)=\"selectedPractitioner(practitioner.practitioner.id)\">Kiválaszt</button>\r\n    </mat-card-actions>\r\n</ng-template>\r\n</mat-card>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HolidaysDto } from 'src/app/dto/holidays-dto';\r\nimport { User } from 'src/app/model/user';\r\nimport { Worktime } from 'src/app/model/worktime';\r\nimport { AppointmentService } from 'src/app/service/appointment.service';\r\nimport { PatientService } from 'src/app/service/patient.service';\r\nimport { TokenService } from 'src/app/service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-worktime',\r\n  templateUrl: './worktime.component.html',\r\n  styleUrls: ['./worktime.component.css']\r\n})\r\nexport class WorktimeComponent implements OnInit {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n  errorMessage: string;\r\n\r\n  worksOnHoliday: boolean;\r\n\r\n  mondayStart: string = \"\";\r\n  tuesdayStart: string= \"\";\r\n  wednesdayStart: string= \"\";\r\n  thursdayStart: string= \"\";\r\n  fridayStart: string= \"\";\r\n\r\n  mondayEnd: string = \"\";\r\n  tuesdayEnd: string = \"\";\r\n  wednesdayEnd: string = \"\";\r\n  thursdayEnd: string = \"\";\r\n  fridayEnd: string = \"\";\r\n\r\n  worktime: Worktime;\r\n  worktimes: Array<Worktime>;\r\n\r\n  constructor( private toastr: ToastrService, private tokenService: TokenService,\r\n    private appointmentService : AppointmentService, private patientService: PatientService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile(){\r\n    this.profileData = new User();\r\n\r\n    this.patientService.getProfileDetails(this.username)\r\n      .subscribe(\r\n        data => {\r\n          this.profileData = data;\r\n          this.getBusinessHours();\r\n          this.getWorksOnHolidays();\r\n        },\r\n        err => {\r\n          this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getBusinessHours(){\r\n    this.appointmentService.getBusinessHours(this.username)\r\n    .subscribe(\r\n      data => {\r\n          this.mondayStart = data[0].fromTime;\r\n          this.mondayEnd = data[0].toTime;\r\n          this.tuesdayStart = data[1].fromTime;\r\n          this.tuesdayEnd = data[1].toTime;\r\n          this.wednesdayStart = data[2].fromTime;\r\n          this.wednesdayEnd = data[2].toTime;\r\n          this.thursdayStart = data[3].fromTime;\r\n          this.thursdayEnd = data[3].toTime;\r\n          this.fridayStart = data[4].fromTime;\r\n          this.fridayEnd = data[4].toTime;\r\n      },\r\n      error => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  getWorksOnHolidays(){\r\n    this.appointmentService.getHolidayWorksForWorktimeSettings(this.username)\r\n    .subscribe(\r\n      data => {\r\n        this.worksOnHoliday = data.worksOnHoliday;\r\n      },\r\n      error => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.appointmentService.setBusinessHours(\r\n      this.username,\r\n      this.worktimes = [\r\n      new Worktime(1,1,this.mondayStart,this.mondayEnd),\r\n      new Worktime(2,2,this.tuesdayStart,this.tuesdayEnd),\r\n      new Worktime(3,3,this.wednesdayStart,this.wednesdayEnd),\r\n      new Worktime(4,4,this.thursdayStart,this.thursdayEnd),\r\n      new Worktime(5,5,this.fridayStart,this.fridayEnd),\r\n    ])\r\n      .subscribe(\r\n        data => {\r\n          this.toastr.success('Munkaidőd beállításra került!', 'OK', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        },\r\n        error => {\r\n\r\n        }\r\n      );\r\n\r\n      this.appointmentService.setWorksOnHolidays(this.username, new HolidaysDto(this.worksOnHoliday)).subscribe(\r\n        data => {\r\n        },\r\n        error => {\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n<h2>Add meg, hogy mikor szeretnél dolgozni</h2><br>\r\n\r\n<div class=\"d-flex justify-content-center\">\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-content>\r\n      <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n        <h3>Hétfő</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"mondayStart\"\r\n              name=\"mondayStart\"\r\n              id=\"mondayStart\"\r\n              matInput\r\n              #mondayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              required\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"mondayEnd\"\r\n              name=\"mondayEnd\"\r\n              id=\"mondayEnd\"\r\n              matInput\r\n              #mondayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Kedd</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"tuesdayStart\"\r\n              name=\"tuesdayStart\"\r\n              id=\"tuesdayStart\"\r\n              matInput\r\n              #tuesdayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"tuesdayEnd\"\r\n              name=\"tuesdayEnd\"\r\n              id=\"tuesdayEnd\"\r\n              matInput\r\n              #tuesdayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Szerda</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"wednesdayStart\"\r\n              name=\"wednesdayStart\"\r\n              id=\"wednesdayStart\"\r\n              matInput\r\n              #wednesdayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"wednesdayEnd\"\r\n              name=\"wednesdayEnd\"\r\n              id=\"wednesdayEnd\"\r\n              matInput\r\n              #wednesdayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Csütörtök</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"thursdayStart\"\r\n              name=\"thursdayStart\"\r\n              id=\"thursdayStart\"\r\n              matInput\r\n              #thursdayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"thursdayEnd\"\r\n              name=\"thursdayEnd\"\r\n              id=\"thursdayEnd\"\r\n              matInput\r\n              #thursdayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Péntek</h3>\r\n        <div class=\"start-end-time\">\r\n          <div class=\"title-input\">\r\n            <h5>Kezdés</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"fridayStart\"\r\n              name=\"fridayStart\"\r\n              id=\"fridayStart\"\r\n              matInput\r\n              #fridayStartError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              required\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"title-input\">\r\n            <h5>Vége</h5>\r\n            <mat-form-field color=\"accent\" appearance=\"legacy\">\r\n              <input\r\n              [(ngModel)]=\"fridayEnd\"\r\n              name=\"fridayEnd\"\r\n              id=\"fridayEnd\"\r\n              matInput\r\n              #fridayEndError=\"ngModel\"\r\n              pattern=\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\r\n              required\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"slider\">\r\n          <mat-slide-toggle labelPosition=\"before\" name=\"worksOnHoliday\" [(ngModel)]=\"worksOnHoliday\" color=\"primary\">Munkaszüneti napok engedélyezése</mat-slide-toggle>\r\n        </div>\r\n\r\n        <mat-card-actions>\r\n          <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n            <i class=\"fas fa-sign-in-alt\"></i> Munkaidő rögzítése\r\n          </button>\r\n        </mat-card-actions>\r\n\r\n      </form>\r\n\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { TokenService } from '../service/token.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LoginUser } from '../dto/login-user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginUser: LoginUser;\r\n  username: string;\r\n  password: string;\r\n  errorMessage: string;\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogin(): void{\r\n    this.loginUser = new LoginUser(this.username, this.password);\r\n    this.authService.login(this.loginUser).subscribe(\r\n      data => {\r\n        this.tokenService.setToken(data.token);\r\n        this.toastr.success('Sikeresen bejelentkeztél!', 'OK', {\r\n          timeOut: 3000, positionClass: 'toast-top-center'\r\n        });\r\n        this.router.navigate(['/']);\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error?.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n<div class=\"container d-flex justify-content-center\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <ul class=\"nav nav-tabs\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" routerLink=\"/login\">Bejelentkezés</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/registration\">Regisztráció</a>\r\n          </li>\r\n        </ul>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onLogin()\" novalidate>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Felhasználónév</mat-label>\r\n            <input name=\"username\" id=\"username\" matInput [(ngModel)]=\"username\" required>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Jelszó</mat-label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" matInput [(ngModel)]=\"password\" required>\r\n          </mat-form-field>\r\n\r\n          <div class=\"form-group\">\r\n            <button class=\"btn btn-outline-success btn-block\" [disabled]=\"!f.valid\"><i class=\"fas fa-sign-in-alt\"></i> Login </button>\r\n          </div>\r\n        </form>\r\n        <a id=\"forgot-password\" routerLink=\"/forgot-password\">Elfelejtettem a jelszavam</a>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NewUser } from '../dto/new-user';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  newUser: NewUser;\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n\r\n  errorMessage: string;\r\n\r\n  minDate = new Date(1900,1,1);\r\n  maxDate = new Date();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onRegister(): void{\r\n    this.newUser = new NewUser(this.name, this.username, this.email, this.password,\r\n      this.address, this.dateOfBorn, this.phoneNumber);\r\n    this.authService.addUser(this.newUser).subscribe(\r\n      data => {\r\n        this.toastr.success('Sikeres regisztráció!', 'OK', {\r\n          timeOut: 3000, positionClass: 'toast-top-center'\r\n        });\r\n\r\n        this.router.navigate(['/login']);\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n  <div class=\"container d-flex justify-content-center\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <ul class=\"nav nav-tabs\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\">Bejelentkezés</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" routerLink=\"/registration\">Regisztráció</a>\r\n          </li>\r\n        </ul>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onRegister()\" novalidate>\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Felhasználónév</mat-label>\r\n            <input\r\n              [(ngModel)]=\"username\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              matInput\r\n              #usernameError=\"ngModel\"\r\n              minlength=\"5\"\r\n              maxlength=\"15\"\r\n              pattern=\"[A-Za-z0-9]+\"\r\n              required\r\n            />\r\n            <mat-hint align=\"start\">Minimum 5, maximum 15 karakter.</mat-hint>\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"usernameError.invalid && usernameError.touched\"\r\n            >\r\n              <div *ngIf=\"usernameError.errors.required\">\r\n                Felhasználónév megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"usernameError.errors.minlength\">\r\n                Minimum {{ usernameError.errors.minlength.requiredLength }} karakter hosszúságú legyen!\r\n              </div>\r\n              <div *ngIf=\"usernameError.errors.pattern\">\r\n                Csak kis- és nagybetűket, illetve számokat tartalmazhat!\r\n              </div>\r\n            </div>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Jelszó</mat-label>\r\n            <input\r\n              [(ngModel)]=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              matInput\r\n              #passwordError=\"ngModel\"\r\n              minlength=\"8\"\r\n              maxlength=\"30\"\r\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"passwordError.invalid && passwordError.touched\"\r\n            >\r\n              <div *ngIf=\"passwordError.errors.required\">\r\n                Jelszó megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"passwordError.errors.minlength\">\r\n                Minimum {{ passwordError.errors.minlength.requiredLength }} karakter hosszúságú legyen!\r\n              </div>\r\n              <div *ngIf=\"passwordError.errors.pattern\">\r\n                Tartalmazzon számokat kis és nagybetűket.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\"\r\n              >Minimum 8, maximum 30 karakter hosszú, tartalmazzon számokat kis\r\n              és nagybetűket.</mat-hint\r\n            >\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Teljes név</mat-label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              matInput\r\n              maxlength=\"40\"\r\n              #nameError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"nameError.invalid && nameError.touched\"\r\n            >\r\n              <div *ngIf=\"nameError.errors.required\">\r\n                Név megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"nameError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Név megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              [(ngModel)]=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              matInput\r\n              #emailError=\"ngModel\"\r\n              pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"emailError.invalid && emailError.touched\"\r\n            >\r\n              <div *ngIf=\"emailError.errors.required\">\r\n                Email megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.pattern\">\r\n                Meg kell felelnie a mintának.\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Email cím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <label for=\"dateOfBorn\">Születési dátum:</label>\r\n            <input\r\n              name=\"dateOfBorn\"\r\n              id=\"dateOfBorn\"\r\n              matInput\r\n              [matDatepicker]=\"myDatePicker\"\r\n              [(ngModel)]=\"dateOfBorn\"\r\n              [min]=\"minDate\"\r\n              [max]=\"maxDate\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              [for]=\"myDatePicker\"\r\n              matSuffix\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatePicker></mat-datepicker>\r\n            <mat-hint align=\"start\">Jobb oldalt tudod kiválasztani</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Lakcím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"address\"\r\n              name=\"address\"\r\n              id=\"address\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              #addressError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"addressError.invalid && addressError.touched\"\r\n            >\r\n              <div *ngIf=\"addressError.errors.required\">\r\n                Lakcím megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"addressError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Lakcím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Telefonszám</mat-label>\r\n            <input\r\n              [(ngModel)]=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              matInput\r\n              maxlength=\"20\"\r\n              #phoneNumberError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"phoneNumberError.invalid && phoneNumberError.touched\"\r\n            >\r\n              <div *ngIf=\"phoneNumberError.errors.required\">\r\n                Telefonszám megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"phoneNumberError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Telefonszám megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n              <i class=\"fas fa-sign-in-alt\"></i> Regisztráció\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ClientCrudDto } from '../dto/client-crud-dto';\r\nimport { Appointment } from '../model/appointment';\r\nimport { User } from '../model/user';\r\nimport { PatientService } from '../service/patient.service';\r\nimport { PractitionerDashboardService } from '../service/practitioner-dashboard.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n\r\n  username: string;\r\n  clients: Array<ClientCrudDto> = [];\r\n  errorMessage: string;\r\n  name: any;\r\n  totalRecords: number;\r\n  page:number = 1;\r\n\r\n  constructor(private service: PractitionerDashboardService, private tokenService: TokenService,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.username = this.tokenService.getUserName();\r\n    this.getClients();\r\n  }\r\n\r\n  getClients() {\r\n    this.service.getAllClient(this.username).subscribe(\r\n      response => {\r\n        this.clients = response;\r\n      },\r\n      error => {\r\n        // TODO: Error message\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAppointment(id: number) {\r\n    this.service.deleteAppointment(id)\r\n      .subscribe(\r\n        data => {\r\n          this.toastr.success('Foglalás törölve!', 'OK', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n          this.getClients();\r\n        },\r\n        err => {\r\n          this.errorMessage = err.error.message;\r\n          this.toastr.error(this.errorMessage, 'Hiba!', {\r\n            timeOut: 3000,  positionClass: 'toast-top-center',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  search(){\r\n    if(this.name == \"\"){\r\n      this.ngOnInit();\r\n    } else{\r\n      this.clients = this.clients.filter(res=>{\r\n        return res.clientName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n","\r\n<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <div class=\"panel panel-primary\">\r\n    <div class=\"panel-heading\">\r\n      <h2>Kliens lista</h2>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n      <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"name\" (ngModelChange)=\"search()\" placeholder=\"Írd be a páciens nevét\">\r\n      <table class=\"table table-striped table-responsive-md\">\r\n        <thead>\r\n          <tr>\r\n            <th>Név</th>\r\n            <th>Időpont</th>\r\n            <th>Megjegyzés</th>\r\n            <th>Műveletek</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let client of clients | paginate: { id: 'listing_pagination',\r\n          itemsPerPage: 10,\r\n          currentPage: page,\r\n          totalItems: totalRecords }\">\r\n            <td>{{client.clientName}}</td>\r\n            <td>{{client.time | date: 'yyyy.MM.dd hh:mm'}}</td>\r\n            <td>{{client.message}}</td>\r\n            <td><button (click)=\"deleteAppointment(client.appointmentId)\" class=\"btn btn-success\"><i class=\"fas fa-check\"></i></button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <pagination-controls  id=\"listing_pagination\" maxSize=\"5\"\r\n        directionLinks=\"true\"\r\n        (pageChange)=\"page = $event\"></pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-common-questions',\n  templateUrl: './common-questions.component.html',\n  styleUrls: ['./common-questions.component.css']\n})\nexport class CommonQuestionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-main-nav></app-main-nav>\n<div class=\"container\">\n  <mat-accordion>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Mi célból jött létre az oldal?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Az oldal szakdolgozat készítés céljából jött létre. </p>\n      <p>Célja az, hogy az embereknek lehetőségük legyen általános konzultációkra időpontot<br>\n      foglalni és különböző szakterületű orvosokkal beszélgetni.<br></p>\n      <p>Megkönnyíti a páciensek és az orvosok dolgát azzal, hogy egy modern és egyszerűen kezelhető<br>\n      online felületen tudjanak időpontot foglalni, ezzel elkerülve a telefonálást vagy a sorbanállást.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Hogyan lehetek orvos?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Ha orvos szeretnél lenni, egy telefonos egyeztetést követően lesz lehetőséged erre.</p>\n      <p>Tel.:+36-30/123-2101</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Miért nincs feltüntetve a konzultációk ára?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>A konzultációk ára nem mindig határozható meg előre.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Ingyenes a foglalás?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Igen, a foglalás természetesen nem kerül semmibe.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Hova érkezzek?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Az orvos által megadott munkahelyi címre.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Időpont előtt mennyivel érkezzek?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Az általad lefoglalt időpont előtt 5-10 perccel célszerű megérkezni.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Hogy történik az időpontfoglalás?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Egyszerre egy orvoshoz egy időpontot foglalhatsz, <br>\n        viszont több orvosnál is lehet foglalásod egyidejűleg</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Mit tegyek, ha le kell mondanom a foglalásom?\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <br><p>Ha le szeretnél mondani egy foglalást, akkor kattints a foglalásodra,<br>\n      így egyszerűen vissza tudod mondani.</p>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n</div>\n","export class ForgotPasswordDto {\n  email: string;\n  constructor(email: string){\n    this.email = email;\n  }\n}\n","export class HolidaysDto {\r\n  worksOnHoliday: boolean;\r\n  constructor(worksOnHoliday: boolean){\r\n    this.worksOnHoliday = worksOnHoliday;\r\n  }\r\n}\r\n","export class JwtDto {\r\n  token: string;\r\n  constructor(token: string){\r\n    this.token = token;\r\n  }\r\n}\r\n","export class LoginUser {\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(username: string, password: string){\r\n    this.username = username;\r\n    this.password = password;\r\n  }\r\n}\r\n","export class NewUser {\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n\r\n  constructor(name: string, username: string, email: string, password: string,\r\n    address: string, dateOfBorn: Date, phoneNumber: string){\r\n    this.name = name;\r\n    this.username = username;\r\n    this.email = email;\r\n    this.password = password;\r\n    this.address = address;\r\n    this.dateOfBorn = dateOfBorn;\r\n    this.phoneNumber = phoneNumber;\r\n  }\r\n}\r\n","export class UpdatePasswordDto {\n  password: string;\n\n  constructor(password: string){\n    this.password = password;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ForgotPasswordDto } from '../dto/forgot-password-dto';\nimport { User } from '../model/user';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  email: string;\n  user: User;\n\n  constructor(private authService: AuthService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onSubmit(){\n    this.authService.forgotPassword(new ForgotPasswordDto(this.email)).subscribe(\n      data => {\n        this.toastr.success('Kérlek ellenőrizd a bejövő emaileket!', 'OK', {\n          timeOut: 3000,  positionClass: 'toast-top-center',\n        });\n      },\n      error => {\n        this.toastr.error('Ez az email nem tartozik egyetlen fiókhoz sem!', 'Hiba!', {\n          timeOut: 3000,  positionClass: 'toast-top-center',\n        });\n      }\n    );\n  }\n\n\n\n}\n","<app-main-nav></app-main-nav>\n<div class=\"container\">\n  <h2>Jelszó visszaállítása</h2>\n  <h3>Kérlek add meg az email címedet!</h3>\n\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <mat-form-field color=\"accent\">\n      <mat-label>Email</mat-label>\n      <input\n        [(ngModel)]=\"email\"\n        name=\"email\"\n        id=\"email\"\n        matInput\n        #emailError=\"ngModel\"\n        pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\n      />\n    </mat-form-field>\n    <br>\n      <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\n        <i class=\"fas fa-sign-in-alt\"></i> Küldés\n      </button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if(this.tokenService.isLogged()){\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdGuardService implements CanActivate {\r\n\r\n  realRole: string;\r\n  realRole2: string;\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private router: Router\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n      const expectedRole = route.data.expectedRole;\r\n      this.realRole = this.tokenService.IsAdmin ? 'admin' : 'patient';\r\n      this.realRole2 = this.tokenService.IsPractitioner ? 'practitioner' : 'patient';\r\n      if (!this.tokenService.isLogged() || expectedRole.indexOf(this.realRole) < 0 && expectedRole.indexOf(this.realRole2) < 0) {\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  username: string;\r\n\r\n  constructor(private tokenService: TokenService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.username = this.tokenService.getUserName();\r\n  }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n<div class=\"container text-center\">\r\n  <h2 *ngIf=\"!username\">Üdvözöllek idegen!</h2>\r\n  <h2 *ngIf=\"username\">Üdvözöllek {{username}}!</h2>\r\n</div>\r\n\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, concatMap } from 'rxjs/operators';\r\nimport { JwtDto } from '../dto/jwt-dto';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private tokenService: TokenService, private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\r\n\r\n    if(!this.tokenService.isLogged()){\r\n      return next.handle(req);\r\n    }\r\n\r\n    let intReq = req;\r\n    const token = this.tokenService.getToken();\r\n\r\n    intReq = this.addToken(req, token);\r\n\r\n    return next.handle(intReq).pipe(catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 401) {\r\n        const dto: JwtDto = new JwtDto(this.tokenService.getToken());\r\n        return this.authService.refresh(dto).pipe(concatMap((data: any) => {\r\n          this.tokenService.setToken(data.token);\r\n          intReq = this.addToken(req, data.token);\r\n          return next.handle(intReq);\r\n        }));\r\n      } else {\r\n        //this.tokenService.logOut();\r\n        return throwError(error);\r\n      }\r\n    }));\r\n  }\r\n\r\n  private addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\r\n    return req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n}\r\n\r\nexport const interceptorProvider = [{provide: HTTP_INTERCEPTORS, useClass: UserInterceptorService, multi: true}];\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { TokenService } from '../service/token.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-main-nav',\r\n  templateUrl: './main-nav.component.html',\r\n  styleUrls: ['./main-nav.component.css']\r\n})\r\nexport class MainNavComponent {\r\n\r\n  isLogged = false;\r\n  isPatient = false;\r\n  isPractitioner = false;\r\n  isAdmin = false;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, private tokenService: TokenService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isLogged = this.tokenService.isLogged();\r\n    this.isAdmin = this.tokenService.IsAdmin();\r\n    this.isPractitioner = this.tokenService.IsPractitioner();\r\n    this.isPatient = this.tokenService.IsPatient();\r\n  }\r\n\r\n  onLogout(): void {\r\n      this.tokenService.logOut();\r\n      window.location.reload()\r\n      this.router.navigate(['/']);\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"(isHandset$ | async) === false\">\r\n\r\n    <mat-toolbar>\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n        <i class=\"fas fa-bars\"></i>\r\n      </button>\r\n      Menü\r\n    </mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-button *ngIf=\"!isLogged\" routerLink=\"/frequently-asked-questions\" class=\"sidelistelements\"><i class=\"fas fa-question\"></i> Gyakori kérdések </a>\r\n      <a mat-button *ngIf=\"isPatient\" routerLink=\"/profile\" class=\"sidelistelements\"><i class=\"fas fa-user-circle\"></i> Adatlap </a>\r\n      <a mat-button *ngIf=\"isPractitioner\" routerLink=\"/practitioner-dashboard\" class=\"sidelistelements\"><i class=\"fas fa-notes-medical\"></i> Kliensek </a>\r\n      <a mat-button *ngIf=\"isPractitioner\" routerLink=\"/appointment/worktimes\" class=\"sidelistelements\"><i class=\"fas fa-business-time\"></i> Munkaidő módosítása </a>\r\n      <a mat-button *ngIf=\"isPatient\" routerLink=\"/appointment/update-practitioner\" class=\"sidelistelements\"><i class=\"fas fa-user-md\"></i> Orvos kiválasztása </a>\r\n      <a mat-button *ngIf=\"isPatient\" routerLink=\"/appointment/reservation\" class=\"sidelistelements\"><i class=\"far fa-calendar-check\"></i> Időpontfoglalás </a>\r\n      <a mat-button *ngIf=\"isAdmin\" routerLink=\"/practitioners\" class=\"sidelistelements\"><i class=\"far fa-address-book\"></i> Orvosok </a>\r\n      <a mat-button *ngIf=\"isAdmin\" routerLink=\"/patients\" class=\"sidelistelements\"><i class=\"fas fa-address-book\"></i> Páciensek </a>\r\n      <a mat-raised-button color=\"primary\" *ngIf=\"!isLogged\" routerLink=\"/login\" class=\"sidelistelements\"><i class=\"fas fa-sign-in-alt\"></i> Bejelentkezés </a>\r\n      <a mat-raised-button color=\"warn\" *ngIf=\"isLogged\" (click)=\"onLogout()\" style=\"cursor: pointer;\" class=\"sidelistelements\"><i class=\"fas fa-door-open\"></i> Kijelentkezés </a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar>\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n        <i class=\"fas fa-bars\"></i>\r\n      </button>\r\n      <i class=\"fas fa-plus-square\"></i>\r\n       <span id=\"title\"> &nbsp; Egészségügyi Időpontfoglaló Rendszer</span>\r\n    </mat-toolbar>\r\n    <!--More code here-->\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Patient } from \"./patient\";\r\nimport { Practitioner } from \"./practitioner\";\r\n\r\nexport class Appointment {\r\n\r\n  constructor(\r\n    public id: string,\r\n    public message: string = null,\r\n    public time: string = null,\r\n    public patient: Patient = null,\r\n    public practitioner: Practitioner = null\r\n    ){}\r\n\r\n}\r\n","import { Patient } from './patient';\r\nimport { Practitioner } from './practitioner';\r\nimport { Role } from './role';\r\n\r\nexport class User {\r\n\r\n  constructor(\r\n    public id: number = null,\r\n    public username: string = null,\r\n    public password: string = null,\r\n    public activation: string = null,\r\n    public isenabled: boolean = false,\r\n    public roles: Array<Role> = [],\r\n    public patient: Patient = null,\r\n    public practitioner: Practitioner = null\r\n    ){}\r\n\r\n\r\n}\r\n","export class Worktime {\r\n  constructor(\r\n    public id: number = null,\r\n    public day: number = null,\r\n    public fromTime: string = null,\r\n    public toTime: string = null,\r\n  ){}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PatientService } from '../service/patient.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-password-update',\r\n  templateUrl: './password-update.component.html',\r\n  styleUrls: ['./password-update.component.css']\r\n})\r\nexport class PasswordUpdateComponent implements OnInit {\r\n\r\nusername: string;\r\npassword: string;\r\nconfirmpassword: string;\r\nerrorMessage: string;\r\n\r\nconstructor(private tokenService: TokenService, private patientService: PatientService,\r\n  private toastr: ToastrService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.username = this.tokenService.getUserName();\r\n  }\r\n\r\n  editProfile() {\r\n    this.patientService.updatePassword(this.username, this.password)\r\n      .subscribe(data => {\r\n        this.toastr.success('', 'Sikeres jelszó módosítás!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        this.gotoList();\r\n      }, err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        console.log(err)\r\n      }\r\n    );\r\n  }\r\n\r\n  gotoList(){\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.editProfile();\r\n  }\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <h3>Jelszó módosítása</h3>\r\n  <div style=\"width: 100%; max-width: 400px\">\r\n\r\n    <form (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\">\r\n\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Új Jelszó</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          minlength=\"8\"\r\n          maxlength=\"30\"\r\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n          [(ngModel)]=\"password\"\r\n          #passwordError=\"ngModel\"\r\n        /><div\r\n        class=\"alert alert-danger\"\r\n        *ngIf=\"passwordError.invalid && passwordError.touched\"\r\n        >\r\n          <div *ngIf=\"passwordError.errors.minlength\">\r\n            Minimum {{ passwordError.errors.minlength.requiredLength }} karakter hosszúságú legyen!\r\n          </div>\r\n          <div *ngIf=\"passwordError.errors.pattern\">\r\n            Tartalmazzon számokat kis és nagybetűket.\r\n          </div>\r\n        </div>\r\n        <mat-hint align=\"start\"\r\n          >Minimum 8, maximum 30 karakter hosszú, tartalmazzon számokat kis\r\n          és nagybetűket.</mat-hint\r\n        >\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Jelszó ismétlés</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          id=\"password_repeat\"\r\n          pattern=\"{{ password }}\"\r\n          #cpass=\"ngModel\"\r\n          name=\"password_repeat\"\r\n          [(ngModel)]=\"confirmpassword\"\r\n          required\r\n        />\r\n        <span class=\"text-danger\" *ngIf=\"cpass.errors?.pattern\"\r\n          >hibás jelszóismétlés</span\r\n        >\r\n      </div>\r\n\r\n      <button color=\"primary\" mat-raised-button>\r\n        <i class=\"far fa-save\"></i> Módosítás\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../model/user';\r\nimport { PatientService } from '../service/patient.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-update',\r\n  templateUrl: './profile-update.component.html',\r\n  styleUrls: ['./profile-update.component.css']\r\n})\r\nexport class ProfileUpdateComponent implements OnInit {\r\n\r\n  username: string;\r\n  updateProfile: User;\r\n  isPractitioner = false;\r\n  errorMessage: string;\r\n\r\n  name: string;\r\n  email: string;\r\n  address: string;\r\n  dateOfBorn: Date;\r\n  phoneNumber: string;\r\n  workingAddress: string;\r\n  specialization: string;\r\n\r\n  minDate = new Date(1900,1,1);\r\n  maxDate = new Date();\r\n\r\n  constructor(private tokenService: TokenService, private patientService: PatientService,\r\n              private toastr: ToastrService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.updateProfile = new User();\r\n    this.username = this.tokenService.getUserName();\r\n    this.isPractitioner = this.tokenService.IsPractitioner();\r\n\r\n    this.patientService.getProfileDetails(this.username)\r\n    .subscribe(data => {\r\n      this.updateProfile = data;\r\n      this.name = this.updateProfile.patient.name;\r\n      this.email = this.updateProfile.patient.email;\r\n      this.address = this.updateProfile.patient.address;\r\n      this.dateOfBorn = this.updateProfile.patient.dateOfBorn;\r\n      this.phoneNumber = this.updateProfile.patient.phoneNumber;\r\n      if(this.isPractitioner == true){\r\n        this.workingAddress = this.updateProfile.practitioner.workingAddress;\r\n        this.specialization = this.updateProfile.practitioner.specialization;\r\n      }\r\n    }, error => console.log(error));\r\n\r\n  }\r\n\r\n  editProfile() {\r\n    this.updateProfile.patient.name = this.name;\r\n    this.updateProfile.patient.email = this.email;\r\n    this.updateProfile.patient.address = this.address;\r\n    this.updateProfile.patient.dateOfBorn = this.dateOfBorn;\r\n    this.updateProfile.patient.phoneNumber = this.phoneNumber;\r\n    if(this.isPractitioner == true){\r\n      this.updateProfile.practitioner.workingAddress = this.workingAddress;\r\n      this.updateProfile.practitioner.specialization = this.specialization;\r\n    }\r\n\r\n    this.patientService.updateProfile(this.username, this.updateProfile)\r\n      .subscribe(data => {\r\n        this.toastr.success('Profilodat módosítottad!', 'OK', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        this.gotoList();\r\n      }, err => {\r\n        this.errorMessage = err.error.message;\r\n        this.toastr.error(this.errorMessage, 'Hiba!', {\r\n          timeOut: 3000,  positionClass: 'toast-top-center',\r\n        });\r\n        console.log(err)\r\n      }\r\n    );\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.editProfile();\r\n  }\r\n\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n\r\n  <div class=\"container d-flex justify-content-center\">\r\n\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <h4><b>Profil módosítása</b></h4>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Teljes név</mat-label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              matInput\r\n              maxlength=\"40\"\r\n              #nameError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"nameError.invalid && nameError.touched\"\r\n            >\r\n              <div *ngIf=\"nameError.errors.required\">\r\n                Név megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"nameError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Név megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              [(ngModel)]=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              matInput\r\n              #emailError=\"ngModel\"\r\n              maxlength=\"40\"\r\n              pattern=\"[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-]+\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"emailError.invalid && emailError.touched\"\r\n            >\r\n              <div *ngIf=\"emailError.errors.required\">\r\n                Email megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.pattern\">\r\n                Meg kell felelnie a mintának.\r\n              </div>\r\n              <div *ngIf=\"emailError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Email cím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <label for=\"dateOfBorn\">Születési dátum:</label>\r\n            <input\r\n              name=\"dateOfBorn\"\r\n              id=\"dateOfBorn\"\r\n              matInput\r\n              [matDatepicker]=\"myDatePicker\"\r\n              [(ngModel)]=\"dateOfBorn\"\r\n              [min]=\"minDate\"\r\n              [max]=\"maxDate\"\r\n              required\r\n            />\r\n            <mat-datepicker-toggle\r\n              [for]=\"myDatePicker\"\r\n              matSuffix\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatePicker></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Lakcím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"address\"\r\n              name=\"address\"\r\n              id=\"address\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              #addressError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"addressError.invalid && addressError.touched\"\r\n            >\r\n              <div *ngIf=\"addressError.errors.required\">\r\n                Lakcím megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"addressError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Lakcím megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\">\r\n            <mat-label>Telefonszám</mat-label>\r\n            <input\r\n              [(ngModel)]=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              matInput\r\n              maxlength=\"20\"\r\n              #phoneNumberError=\"ngModel\"\r\n              required\r\n            />\r\n            <div\r\n              class=\"alert alert-danger\"\r\n              *ngIf=\"phoneNumberError.invalid && phoneNumberError.touched\"\r\n            >\r\n              <div *ngIf=\"phoneNumberError.errors.required\">\r\n                Telefonszám megadása kötelező!\r\n              </div>\r\n              <div *ngIf=\"phoneNumberError.errors.maxlength\">\r\n                Maximum 40 karakter hosszú lehet.\r\n              </div>\r\n            </div>\r\n            <mat-hint align=\"start\">Telefonszám megadása kötelező</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\" *ngIf=\"isPractitioner\">\r\n            <mat-label>Munkahelyi cím</mat-label>\r\n            <input\r\n              [(ngModel)]=\"workingAddress\"\r\n              name=\"workingAddress\"\r\n              id=\"workingAddress\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              required\r\n            />\r\n            <mat-hint align=\"start\">Akkor is add meg, ha megegyezik a lakcímmel!</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" appearance=\"fill\" *ngIf=\"isPractitioner\">\r\n            <mat-label>Szakterület</mat-label>\r\n            <input\r\n              [(ngModel)]=\"specialization\"\r\n              name=\"specialization\"\r\n              id=\"specialization\"\r\n              matInput\r\n              maxlength=\"60\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button color=\"primary\" mat-raised-button [disabled]=\"!f.valid\">\r\n              <i class=\"far fa-save\"></i> Módosítás\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../model/user';\r\nimport { PatientService } from '../service/patient.service';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  username: string = this.tokenService.getUserName();\r\n  profileData: User;\r\n  isPractitioner = false;\r\n\r\n  constructor(private router: Router, private patietService: PatientService,\r\n              private tokenService: TokenService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.getProfile();\r\n    this.isPractitioner = this.tokenService.IsPractitioner();\r\n    }\r\n\r\n    getProfile(){\r\n      this.profileData = new User();\r\n\r\n      this.patietService.getProfileDetails(this.username)\r\n        .subscribe(\r\n          data => {\r\n            this.profileData = data;\r\n          },\r\n          err => {\r\n            this.toastr.error('Nem létezik a felhasználó', 'Hiba!', {\r\n              timeOut: 3000,  positionClass: 'toast-top-center',\r\n            });\r\n            console.log(err)\r\n          }\r\n\r\n        );\r\n    }\r\n\r\n    updateProfile(){\r\n      this.router.navigate(['profile/update']);\r\n    }\r\n\r\n    updatePassword(){\r\n      this.router.navigate(['profile/password-update']);\r\n    }\r\n\r\n}\r\n","<app-main-nav></app-main-nav>\r\n<div class=\"container\">\r\n  <h2>Profil adatok</h2>\r\n  <hr/>\r\n\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-content>\r\n      <div>\r\n        <label><b>Név: </b></label> {{profileData?.patient?.name}}\r\n      </div>\r\n      <div>\r\n        <label><b>Felhasználónév: </b></label> {{profileData.username}}\r\n      </div>\r\n      <div>\r\n        <label><b>Email: </b></label> {{profileData?.patient?.email}}\r\n      </div>\r\n      <div>\r\n        <label><b>Születési dátum: </b></label> {{profileData?.patient?.dateOfBorn}}\r\n      </div>\r\n      <div>\r\n        <label><b>Lakcím: </b></label> {{profileData?.patient?.address}}\r\n      </div>\r\n      <div>\r\n        <label><b>Telefonszám: </b></label> {{profileData?.patient?.phoneNumber}}\r\n      </div>\r\n      <div *ngIf=\"isPractitioner\">\r\n        <label><b>Munkahelyi cím: </b></label> {{profileData?.practitioner?.workingAddress}}\r\n      </div>\r\n      <div *ngIf=\"isPractitioner\">\r\n        <label><b>Szakterület: </b></label> {{profileData?.practitioner?.specialization}}\r\n      </div>\r\n      <button (click)=\"updateProfile()\" class=\"btn btn-info\" style=\"margin-right: 10px\">Módosítás</button>\r\n      <button (click)=\"updatePassword()\" class=\"btn btn-info\" style=\"margin-right: 10px\">Jelszó megváltoztatása</button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UpdatePasswordDto } from '../dto/update-password-dto';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  password: string;\n  confirmpassword: string;\n\n  constructor(private authService: AuthService, private router: Router,\n    private activatedRoute: ActivatedRoute, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.resetPassword();\n  }\n\n  resetPassword(){\n    this.authService.resetPassword(this.activatedRoute.snapshot.url[1].path).subscribe(\n      data => {\n      },\n      error => {\n      }\n    );\n  }\n\n  onSubmit(){\n    this.authService.updatePassword(this.activatedRoute.snapshot.url[1].path, new UpdatePasswordDto(this.password)).subscribe(\n      data => {\n        this.toastr.success('Sikeres jelszómódosítás!', 'OK', {\n          timeOut: 3000,  positionClass: 'toast-top-center',\n        });\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.toastr.error('Sikertelen jelszómódosítás!', 'Hiba!', {\n          timeOut: 3000,  positionClass: 'toast-top-center',\n        });\n      }\n    );\n  }\n\n}\n","<app-main-nav></app-main-nav>\n<div class=\"container\">\n  <h3>Jelszó módosítása</h3>\n  <div style=\"width: 100%; max-width: 400px\">\n\n    <form (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\">\n\n\n      <div class=\"form-group\">\n        <label for=\"password\">Új Jelszó</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password\"\n          name=\"password\"\n          minlength=\"8\"\n          maxlength=\"30\"\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n          [(ngModel)]=\"password\"\n          #passwordError=\"ngModel\"\n        /><div\n        class=\"alert alert-danger\"\n        *ngIf=\"passwordError.invalid && passwordError.touched\"\n        >\n          <div *ngIf=\"passwordError.errors.minlength\">\n            Minimum {{ passwordError.errors.minlength.requiredLength }} karakter hosszúságú legyen!\n          </div>\n          <div *ngIf=\"passwordError.errors.pattern\">\n            Tartalmazzon számokat kis és nagybetűket.\n          </div>\n        </div>\n        <mat-hint align=\"start\"\n          >Minimum 8, maximum 30 karakter hosszú, tartalmazzon számokat kis\n          és nagybetűket.</mat-hint\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Jelszó ismétlés</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password_repeat\"\n          pattern=\"{{ password }}\"\n          #cpass=\"ngModel\"\n          name=\"password_repeat\"\n          [(ngModel)]=\"confirmpassword\"\n          required\n        />\n        <span class=\"text-danger\" *ngIf=\"cpass.errors?.pattern\"\n          >hibás jelszóismétlés</span\n        >\n      </div>\n\n      <button color=\"primary\" mat-raised-button>\n        <i class=\"far fa-save\"></i> Módosítás\n      </button>\n    </form>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminDashboardService {\r\n\r\n  dashboardURL = environment.dashboardURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAllPatient(): Observable<Array<User>>{\r\n    return this.httpClient.get<Array<User>>(this.dashboardURL+'patients');\r\n  }\r\n\r\n  public getPatientById(id: number): Observable<User>{\r\n    return this.httpClient.get<User>(this.dashboardURL+'patients/details/' + id);\r\n  }\r\n\r\n  public updatePatient(id: number, practitioner: User): Observable<User>{\r\n    return this.httpClient.put<User>(this.dashboardURL+'patients/update/' + id, practitioner);\r\n  }\r\n\r\n  public upgradeToPractitioner(id: number){\r\n    return this.httpClient.get(this.dashboardURL+'patients/upgrade-to-practitioner/' + id);\r\n  }\r\n\r\n  public downgradeToPatient(id: number){\r\n    return this.httpClient.get(this.dashboardURL+'practitioner/downgrade-to-patient/' + id);\r\n  }\r\n\r\n  public deletePatient(id: number){\r\n    return this.httpClient.delete(this.dashboardURL + 'patients/delete/' + id);\r\n  }\r\n\r\n  public getAllPractitioner(): Observable<Array<User>>{\r\n    return this.httpClient.get<Array<User>>(this.dashboardURL+'practitioners');\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HolidaysDto } from '../dto/holidays-dto';\r\nimport { InstructionDto } from '../dto/instruction-dto';\r\nimport { Appointment } from '../model/appointment';\r\nimport { User } from '../model/user';\r\nimport { Worktime } from '../model/worktime';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n  appointmentURL = environment.appointmentURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAllPractitionerExceptMe(name: string): Observable<Array<User>>{\r\n    return this.httpClient.get<Array<User>>(this.appointmentURL+'schedule-practitioners/' + name);\r\n  }\r\n\r\n  public updatePractitioner(username: string, practitionerId: number){\r\n    return this.httpClient.put(this.appointmentURL+'update-practitioner/' + username, practitionerId);\r\n  }\r\n\r\n  public saveAppointment(username: string, appointment: Appointment){\r\n    return this.httpClient.post(this.appointmentURL+'create/'+username, appointment);\r\n  }\r\n\r\n  public getAppointments(username: string): Observable<Array<Appointment>>{\r\n    return this.httpClient.get<Array<Appointment>>(this.appointmentURL+'show/'+ username);\r\n  }\r\n\r\n  public showAppointmentsForInstruction(username: string): Observable<Array<InstructionDto>>{\r\n    return this.httpClient.get<Array<InstructionDto>>(this.appointmentURL+'show-appointments-for-instruction/'+ username);\r\n  }\r\n\r\n  public getOthersAppointments(username: string): Observable<Array<Appointment>>{\r\n    return this.httpClient.get<Array<Appointment>>(this.appointmentURL+'show-others-appointments/' + username);\r\n  }\r\n\r\n  public deleteAppointment(id: string){\r\n    return this.httpClient.delete(this.appointmentURL+'delete/'+ id);\r\n  }\r\n\r\n  public setBusinessHours(username: string, worktimes: Worktime[]){\r\n    return this.httpClient.put(this.appointmentURL+'set-business-hours/' + username, worktimes);\r\n  }\r\n\r\n  public getBusinessHours(username: string){\r\n    return this.httpClient.get<Array<Worktime>>(this.appointmentURL+'get-business-hours/' + username);\r\n  }\r\n\r\n  public myPractitionerWorkingTime(username: string){\r\n    return this.httpClient.get<Array<Worktime>>(this.appointmentURL+'my-practitioner-working-time/' + username);\r\n  }\r\n\r\n  public setWorksOnHolidays(username: string, worksOnHoliday: HolidaysDto){\r\n    return this.httpClient.post(this.appointmentURL+'works-on-holidays/' + username, worksOnHoliday);\r\n  }\r\n\r\n  public getHolidayWorksForWorktimeSettings(username: string){\r\n    return this.httpClient.get<HolidaysDto>(this.appointmentURL+'works-on-holidays/'+ username);\r\n  }\r\n\r\n  public getWorksOnHolidays(username: string){\r\n    return this.httpClient.get<HolidaysDto>(this.appointmentURL+'my-practitioner-works-on-holidays/'+ username);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ForgotPasswordDto } from '../dto/forgot-password-dto';\r\nimport { JwtDto } from '../dto/jwt-dto';\r\nimport { LoginUser } from '../dto/login-user';\r\nimport { NewUser } from '../dto/new-user';\r\nimport { UpdatePasswordDto } from '../dto/update-password-dto';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  authURL = environment.authURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public addUser(newUser: NewUser): Observable<any>{\r\n    return this.httpClient.post<any>(this.authURL+'registration',newUser);\r\n  }\r\n\r\n  public login(loginUser: LoginUser): Observable<JwtDto>{\r\n    return this.httpClient.post<JwtDto>(this.authURL+'login',loginUser);\r\n  }\r\n\r\n  public refresh(dto: JwtDto): Observable<JwtDto>{\r\n    return this.httpClient.post<JwtDto>(this.authURL+'refresh',dto);\r\n  }\r\n\r\n  public forgotPassword(email: ForgotPasswordDto){\r\n    return this.httpClient.post<User>(this.authURL+'forgot-password',email);\r\n  }\r\n\r\n  public resetPassword(code: string): Observable<User>{\r\n    return this.httpClient.get<User>(this.authURL+'reset-password/'+code);\r\n  }\r\n\r\n  public updatePassword(code: string, password: UpdatePasswordDto){\r\n    return this.httpClient.post<User>(this.authURL+'update-password/'+code, password);\r\n  }\r\n\r\n  public activation(code: string){\r\n    return this.httpClient.get(this.authURL+'activation/'+code);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService {\r\n\r\n  patientURL = environment.patientURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getProfileDetails(username: string): Observable<User>{\r\n    return this.httpClient.get<User>(this.patientURL+'details/' + username);\r\n  }\r\n\r\n  public updateProfile(username: string, profile: User): Observable<User>{\r\n    return this.httpClient.put<User>(this.patientURL+'update/' + username, profile);\r\n  }\r\n\r\n  public updatePassword(username: string, password: string){\r\n    return this.httpClient.put(this.patientURL+'password-update/' + username, password);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ClientCrudDto } from '../dto/client-crud-dto';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PractitionerDashboardService {\r\n\r\n  dashboardURL = environment.practitionerDashboardURL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAllClient(practitionerUsername: string): Observable<Array<ClientCrudDto>>{\r\n    return this.httpClient.get<Array<ClientCrudDto>>(this.dashboardURL+'show-my-clients/'+practitionerUsername);\r\n  }\r\n\r\n  /*\r\n  public updatePatient(id: number, practitioner: User): Observable<User>{\r\n    return this.httpClient.put<User>(this.dashboardURL+'patients/update/' + id, practitioner);\r\n  }\r\n  */\r\n\r\n  public deleteAppointment(id: number){\r\n    return this.httpClient.delete(this.dashboardURL + 'clients/delete-appointment/' + id);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nconst TOKEN_KEY = 'AuthToken';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  roles: Array<string> = [];\r\n\r\n  constructor(\r\n    private router : Router\r\n  ) {}\r\n\r\n  public setToken(token: string): void{\r\n    window.localStorage.removeItem(TOKEN_KEY);\r\n    window.localStorage.setItem(TOKEN_KEY,token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public isLogged(): boolean{\r\n    if(this.getToken()){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public getUserName(): string {\r\n    if(!this.isLogged()){\r\n      return null;\r\n    }\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded);\r\n    const username = values.sub;\r\n    return username;\r\n  }\r\n\r\n  public IsAdmin(): boolean {\r\n    if(!this.isLogged()){\r\n      return false;\r\n    }\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded);\r\n    const roles = values.roles;\r\n    if(roles.indexOf('ROLE_ADMIN') < 0){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public IsPractitioner(): boolean {\r\n    if(!this.isLogged()){\r\n      return false;\r\n    }\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded);\r\n    const roles = values.roles;\r\n    if(roles.indexOf('ROLE_PRACTITIONER')<0){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public IsPatient(): boolean {\r\n    if(!this.isLogged()){\r\n      return false;\r\n    }\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded);\r\n    const roles = values.roles;\r\n    if(roles.indexOf('ROLE_PATIENT')<0){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public logOut():void{\r\n    window.localStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n  //authURL: \"http://localhost:8080/auth/\",\r\n  //patientURL: \"http://localhost:8080/api/profile/\",\r\n  //dashboardURL: \"http://localhost:8080/api/dashboard/\",\r\n  //appointmentURL: \"http://localhost:8080/api/appointment/\",\r\n  //practitionerDashboardURL: \"http://localhost:8080/api/practitioner-dashboard/\"\r\n  // ng build --prod\r\n    authURL: \"https://onlinehealthcaresystem.herokuapp.com/auth/\",\r\n    patientURL: \"https://onlinehealthcaresystem.herokuapp.com/api/profile/\",\r\n    dashboardURL : \"https://onlinehealthcaresystem.herokuapp.com/api/dashboard/\",\r\n    appointmentURL: \"https://onlinehealthcaresystem.herokuapp.com/api/appointment/\",\r\n    practitionerDashboardURL: \"https://onlinehealthcaresystem.herokuapp.com/api/practitioner-dashboard/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}